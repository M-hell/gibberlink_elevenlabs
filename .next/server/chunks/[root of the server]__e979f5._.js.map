{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/src/app/api/signed-url/route.ts"],"sourcesContent":["import {NextRequest, NextResponse} from \"next/server\";\r\n\r\nexport async function GET(request: NextRequest) {\r\n    const searchParams = request.nextUrl.searchParams;\r\n    const agentId = searchParams.get('agentId');\r\n    const apiKey = process.env.XI_API_KEY;\r\n\r\n    if (!agentId) {\r\n        return NextResponse.json({ error: 'Agent ID is required' }, { status: 400 });\r\n    }\r\n    if (!apiKey) {\r\n        return NextResponse.json({ error: 'XI_API_KEY is not set' }, { status: 500 });\r\n    }\r\n\r\n    try {\r\n        const response = await fetch(\r\n            `https://api.elevenlabs.io/v1/convai/conversation/get_signed_url?agent_id=${agentId}`,\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'xi-api-key': apiKey,\r\n                }\r\n            }\r\n        );\r\n\r\n        if (!response.ok) {\r\n            console.error(response);\r\n            throw new Error('Failed to get signed URL');\r\n        }\r\n\r\n        const data = await response.json();\r\n        return NextResponse.json({signedUrl: data.signed_url});\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n        return NextResponse.json({ error: 'Failed to get signed URL' }, { status: 500 });\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,IAAI,OAAoB;IAC1C,MAAM,eAAe,QAAQ,OAAO,CAAC,YAAY;IACjD,MAAM,UAAU,aAAa,GAAG,CAAC;IACjC,MAAM,SAAS,QAAQ,GAAG,CAAC,UAAU;IAErC,IAAI,CAAC,SAAS;QACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC9E;IACA,IAAI,CAAC,QAAQ;QACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC/E;IAEA,IAAI;QACA,MAAM,WAAW,MAAM,MACnB,CAAC,yEAAyE,EAAE,SAAS,EACrF;YACI,QAAQ;YACR,SAAS;gBACL,cAAc;YAClB;QACJ;QAGJ,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,QAAQ,KAAK,CAAC;YACd,MAAM,IAAI,MAAM;QACpB;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,WAAW,KAAK,UAAU;QAAA;IACxD,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,UAAU;QACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA2B,GAAG;YAAE,QAAQ;QAAI;IAClF;AACJ"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}