{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/src/app/api/chat/route.ts"],"sourcesContent":["import { OpenAI } from '@posthog/ai'\r\nimport { PostHog } from 'posthog-node'\r\n\r\nconst phClient = new PostHog(\r\n  'phc_mX1UQCMVS3TRTbNql9DwdaGGxtNhHnHwSSmUPoPzpjH',\r\n  { host: 'https://us.i.posthog.com' }\r\n);\r\nimport { NextResponse } from 'next/server'\r\n\r\n\r\nconst openai = new OpenAI({\r\n  apiKey: process.env.OPENAI_API_KEY,\r\n  posthog: phClient,\r\n})\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { messages, agentType, sessionId } = await req.json()\r\n    \r\n    const completion = await openai.chat.completions.create({\r\n      model: 'deepseek-ai/DeepSeek-R1',\r\n      messages,\r\n      temperature: 1,\r\n      posthogDistinctId: agentType,\r\n      posthogTraceId: sessionId,\r\n      top_p: 1,\r\n      stream: false,\r\n      stop: null\r\n      ,\r\n\tprovider: \"together\",\r\n\tmax_tokens: 500,\r\n    })\r\n\r\n    console.log('messages', messages);\r\n    console.log('assistant response:', completion.choices[0].message);\r\n\r\n    return NextResponse.json(completion.choices[0].message)\r\n  } catch (error) {\r\n    console.error('OpenAI API Error:', error)\r\n    return NextResponse.json(\r\n      { error: 'AI Service Unavailable' },\r\n      { status: 503 }\r\n    )\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAMA;;;AAJA,MAAM,WAAW,IAAI,wJAAA,CAAA,UAAO,CAC1B,mDACA;IAAE,MAAM;AAA2B;;AAKrC,MAAM,SAAS,IAAI,wJAAA,CAAA,SAAM,CAAC;IACxB,QAAQ,QAAQ,GAAG,CAAC,cAAc;IAClC,SAAS;AACX;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,IAAI;QAEzD,MAAM,aAAa,MAAM,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACtD,OAAO;YACP;YACA,aAAa;YACb,mBAAmB;YACnB,gBAAgB;YAChB,OAAO;YACP,QAAQ;YACR,MAAM;YAEX,UAAU;YACV,YAAY;QACT;QAEA,QAAQ,GAAG,CAAC,YAAY;QACxB,QAAQ,GAAG,CAAC,uBAAuB,WAAW,OAAO,CAAC,EAAE,CAAC,OAAO;QAEhE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,WAAW,OAAO,CAAC,EAAE,CAAC,OAAO;IACxD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qBAAqB;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAyB,GAClC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}