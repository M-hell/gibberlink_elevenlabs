{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.esm.js","sources":["file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-core/src/types.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-core/src/utils.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-core/src/lz-string.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-core/src/eventemitter.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-core/src/vendor/uuidv7.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-core/src/index.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-core/src/storage-memory.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-node/src/fetch.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-node/src/feature-flags.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-node/src/extensions/error-tracking/autocapture.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-node/src/extensions/error-tracking/type-checking.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-node/src/extensions/error-tracking/reduceable-cache.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-node/src/extensions/error-tracking/context-lines.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-node/src/extensions/error-tracking/error-conversion.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-node/src/extensions/error-tracking/stack-trace.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-node/src/error-tracking.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-node/src/posthog-node.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-node/src/extensions/sentry-integration.ts","file://D%3A/Web%20Development/Chaicodebackend/Soundwave%20generator/gibberlink/node_modules/posthog-node/src/extensions/express.ts"],"sourcesContent":["export type PostHogCoreOptions = {\n  /** PostHog API host, usually 'https://us.i.posthog.com' or 'https://eu.i.posthog.com' */\n  host?: string\n  /** The number of events to queue before sending to PostHog (flushing) */\n  flushAt?: number\n  /** The interval in milliseconds between periodic flushes */\n  flushInterval?: number\n  /** The maximum number of queued messages to be flushed as part of a single batch (must be higher than `flushAt`) */\n  maxBatchSize?: number\n  /** The maximum number of cached messages either in memory or on the local storage.\n   * Defaults to 1000, (must be higher than `flushAt`)\n   */\n  maxQueueSize?: number\n  /** If set to true the SDK is essentially disabled (useful for local environments where you don't want to track anything) */\n  disabled?: boolean\n  /** If set to false the SDK will not track until the `optIn` function is called. */\n  defaultOptIn?: boolean\n  /** Whether to track that `getFeatureFlag` was called (used by Experiments) */\n  sendFeatureFlagEvent?: boolean\n  /** Whether to load feature flags when initialized or not */\n  preloadFeatureFlags?: boolean\n  /** Option to bootstrap the library with given distinctId and feature flags */\n  bootstrap?: {\n    distinctId?: string\n    isIdentifiedId?: boolean\n    featureFlags?: Record<string, boolean | string>\n    featureFlagPayloads?: Record<string, JsonType>\n  }\n  /** How many times we will retry HTTP requests. Defaults to 3. */\n  fetchRetryCount?: number\n  /** The delay between HTTP request retries, Defaults to 3 seconds. */\n  fetchRetryDelay?: number\n  /** Timeout in milliseconds for any calls. Defaults to 10 seconds. */\n  requestTimeout?: number\n  /** Timeout in milliseconds for feature flag calls. Defaults to 10 seconds for stateful clients, and 3 seconds for stateless. */\n  featureFlagsRequestTimeoutMs?: number\n  /** For Session Analysis how long before we expire a session (defaults to 30 mins) */\n  sessionExpirationTimeSeconds?: number\n  /** Whether to post events to PostHog in JSON or compressed format. Defaults to 'json' */\n  captureMode?: 'json' | 'form'\n  disableGeoip?: boolean\n  /** Special flag to indicate ingested data is for a historical migration. */\n  historicalMigration?: boolean\n}\n\nexport enum PostHogPersistedProperty {\n  AnonymousId = 'anonymous_id',\n  DistinctId = 'distinct_id',\n  Props = 'props',\n  FeatureFlags = 'feature_flags',\n  FeatureFlagPayloads = 'feature_flag_payloads',\n  BootstrapFeatureFlags = 'bootstrap_feature_flags',\n  BootstrapFeatureFlagPayloads = 'bootstrap_feature_flag_payloads',\n  OverrideFeatureFlags = 'override_feature_flags',\n  Queue = 'queue',\n  OptedOut = 'opted_out',\n  SessionId = 'session_id',\n  SessionLastTimestamp = 'session_timestamp',\n  PersonProperties = 'person_properties',\n  GroupProperties = 'group_properties',\n  InstalledAppBuild = 'installed_app_build', // only used by posthog-react-native\n  InstalledAppVersion = 'installed_app_version', // only used by posthog-react-native\n  SessionReplay = 'session_replay', // only used by posthog-react-native\n  DecideEndpointWasHit = 'decide_endpoint_was_hit', // only used by posthog-react-native\n}\n\nexport type PostHogFetchOptions = {\n  method: 'GET' | 'POST' | 'PUT' | 'PATCH'\n  mode?: 'no-cors'\n  credentials?: 'omit'\n  headers: { [key: string]: string }\n  body?: string\n  signal?: AbortSignal\n}\n\n// Check out posthog-js for these additional options and try to keep them in sync\nexport type PostHogCaptureOptions = {\n  /** If provided overrides the auto-generated event ID */\n  uuid?: string\n  /** If provided overrides the auto-generated timestamp */\n  timestamp?: Date\n  disableGeoip?: boolean\n}\n\nexport type PostHogFetchResponse = {\n  status: number\n  text: () => Promise<string>\n  json: () => Promise<any>\n}\n\nexport type PostHogQueueItem = {\n  message: any\n  callback?: (err: any) => void\n}\n\nexport type PostHogEventProperties = {\n  [key: string]: any\n}\n\nexport type PostHogAutocaptureElement = {\n  $el_text?: string\n  tag_name: string\n  href?: string\n  nth_child?: number\n  nth_of_type?: number\n  order?: number\n} & {\n  [key: string]: any\n} // Any key prefixed with `attr__` can be added\n\nexport type PostHogDecideResponse = {\n  config: { enable_collect_everything: boolean }\n  editorParams: { toolbarVersion: string; jsURL: string }\n  isAuthenticated: true\n  supportedCompression: string[]\n  featureFlags: {\n    [key: string]: string | boolean\n  }\n  featureFlagPayloads: {\n    [key: string]: JsonType\n  }\n  errorsWhileComputingFlags: boolean\n  sessionRecording?:\n    | boolean\n    | {\n        [key: string]: JsonType\n      }\n}\n\nexport type PostHogFlagsAndPayloadsResponse = {\n  featureFlags: PostHogDecideResponse['featureFlags']\n  featureFlagPayloads: PostHogDecideResponse['featureFlagPayloads']\n}\n\nexport type JsonType = string | number | boolean | null | { [key: string]: JsonType } | Array<JsonType>\n\nexport type FetchLike = (url: string, options: PostHogFetchOptions) => Promise<PostHogFetchResponse>\n","import { FetchLike } from './types'\n\nexport function assert(truthyValue: any, message: string): void {\n  if (!truthyValue) {\n    throw new Error(message)\n  }\n}\n\nexport function removeTrailingSlash(url: string): string {\n  return url?.replace(/\\/+$/, '')\n}\n\nexport interface RetriableOptions {\n  retryCount: number\n  retryDelay: number\n  retryCheck: (err: any) => boolean\n}\n\nexport async function retriable<T>(fn: () => Promise<T>, props: RetriableOptions): Promise<T> {\n  let lastError = null\n\n  for (let i = 0; i < props.retryCount + 1; i++) {\n    if (i > 0) {\n      // don't wait when it's the last try\n      await new Promise((r) => setTimeout(r, props.retryDelay))\n    }\n\n    try {\n      const res = await fn()\n      return res\n    } catch (e) {\n      lastError = e\n      if (!props.retryCheck(e)) {\n        throw e\n      }\n    }\n  }\n\n  throw lastError\n}\n\nexport function currentTimestamp(): number {\n  return new Date().getTime()\n}\n\nexport function currentISOTime(): string {\n  return new Date().toISOString()\n}\n\nexport function safeSetTimeout(fn: () => void, timeout: number): any {\n  // NOTE: we use this so rarely that it is totally fine to do `safeSetTimeout(fn, 0)``\n  // rather than setImmediate.\n  const t = setTimeout(fn, timeout) as any\n  // We unref if available to prevent Node.js hanging on exit\n  t?.unref && t?.unref()\n  return t\n}\n\n// NOTE: We opt for this slightly imperfect check as the global \"Promise\" object can get mutated in certain environments\nexport const isPromise = (obj: any): obj is Promise<any> => {\n  return obj && typeof obj.then === 'function'\n}\n\nexport function getFetch(): FetchLike | undefined {\n  return typeof fetch !== 'undefined' ? fetch : typeof global.fetch !== 'undefined' ? global.fetch : undefined\n}\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\n\n// private property\nconst f = String.fromCharCode\nconst keyStrBase64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\nconst baseReverseDic: any = {}\n\nfunction getBaseValue(alphabet: any, character: any): any {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {}\n    for (let i = 0; i < alphabet.length; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i\n    }\n  }\n  return baseReverseDic[alphabet][character]\n}\n\nexport const LZString = {\n  compressToBase64: function (input: any): string {\n    if (input == null) {\n      return ''\n    }\n    const res = LZString._compress(input, 6, function (a: any) {\n      return keyStrBase64.charAt(a)\n    })\n    switch (\n      res.length % 4 // To produce valid Base64\n    ) {\n      default: // When could this happen ?\n      case 0:\n        return res\n      case 1:\n        return res + '==='\n      case 2:\n        return res + '=='\n      case 3:\n        return res + '='\n    }\n  },\n\n  decompressFromBase64: function (input: any): any {\n    if (input == null) {\n      return ''\n    }\n    if (input == '') {\n      return null\n    }\n    return LZString._decompress(input.length, 32, function (index: any) {\n      return getBaseValue(keyStrBase64, input.charAt(index))\n    })\n  },\n\n  compress: function (uncompressed: any): any {\n    return LZString._compress(uncompressed, 16, function (a: any) {\n      return f(a)\n    })\n  },\n  _compress: function (uncompressed: any, bitsPerChar: any, getCharFromInt: any): any {\n    if (uncompressed == null) {\n      return ''\n    }\n    const context_dictionary: any = {},\n      context_dictionaryToCreate: any = {},\n      context_data = []\n\n    let i,\n      value,\n      context_c = '',\n      context_wc = '',\n      context_w = '',\n      context_enlargeIn = 2, // Compensate for the first entry which should not count\n      context_dictSize = 3,\n      context_numBits = 2,\n      context_data_val = 0,\n      context_data_position = 0,\n      ii\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii)\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary, context_c)) {\n        context_dictionary[context_c] = context_dictSize++\n        context_dictionaryToCreate[context_c] = true\n      }\n\n      context_wc = context_w + context_c\n      if (Object.prototype.hasOwnProperty.call(context_dictionary, context_wc)) {\n        context_w = context_wc\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\n          if (context_w.charCodeAt(0) < 256) {\n            for (i = 0; i < context_numBits; i++) {\n              context_data_val = context_data_val << 1\n              if (context_data_position == bitsPerChar - 1) {\n                context_data_position = 0\n                context_data.push(getCharFromInt(context_data_val))\n                context_data_val = 0\n              } else {\n                context_data_position++\n              }\n            }\n            value = context_w.charCodeAt(0)\n            for (i = 0; i < 8; i++) {\n              context_data_val = (context_data_val << 1) | (value & 1)\n              if (context_data_position == bitsPerChar - 1) {\n                context_data_position = 0\n                context_data.push(getCharFromInt(context_data_val))\n                context_data_val = 0\n              } else {\n                context_data_position++\n              }\n              value = value >> 1\n            }\n          } else {\n            value = 1\n            for (i = 0; i < context_numBits; i++) {\n              context_data_val = (context_data_val << 1) | value\n              if (context_data_position == bitsPerChar - 1) {\n                context_data_position = 0\n                context_data.push(getCharFromInt(context_data_val))\n                context_data_val = 0\n              } else {\n                context_data_position++\n              }\n              value = 0\n            }\n            value = context_w.charCodeAt(0)\n            for (i = 0; i < 16; i++) {\n              context_data_val = (context_data_val << 1) | (value & 1)\n              if (context_data_position == bitsPerChar - 1) {\n                context_data_position = 0\n                context_data.push(getCharFromInt(context_data_val))\n                context_data_val = 0\n              } else {\n                context_data_position++\n              }\n              value = value >> 1\n            }\n          }\n          context_enlargeIn--\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits)\n            context_numBits++\n          }\n          delete context_dictionaryToCreate[context_w]\n        } else {\n          value = context_dictionary[context_w]\n          for (i = 0; i < context_numBits; i++) {\n            context_data_val = (context_data_val << 1) | (value & 1)\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n            value = value >> 1\n          }\n        }\n        context_enlargeIn--\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits)\n          context_numBits++\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++\n        context_w = String(context_c)\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== '') {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\n        if (context_w.charCodeAt(0) < 256) {\n          for (i = 0; i < context_numBits; i++) {\n            context_data_val = context_data_val << 1\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n          }\n          value = context_w.charCodeAt(0)\n          for (i = 0; i < 8; i++) {\n            context_data_val = (context_data_val << 1) | (value & 1)\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n            value = value >> 1\n          }\n        } else {\n          value = 1\n          for (i = 0; i < context_numBits; i++) {\n            context_data_val = (context_data_val << 1) | value\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n            value = 0\n          }\n          value = context_w.charCodeAt(0)\n          for (i = 0; i < 16; i++) {\n            context_data_val = (context_data_val << 1) | (value & 1)\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n            value = value >> 1\n          }\n        }\n        context_enlargeIn--\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits)\n          context_numBits++\n        }\n        delete context_dictionaryToCreate[context_w]\n      } else {\n        value = context_dictionary[context_w]\n        for (i = 0; i < context_numBits; i++) {\n          context_data_val = (context_data_val << 1) | (value & 1)\n          if (context_data_position == bitsPerChar - 1) {\n            context_data_position = 0\n            context_data.push(getCharFromInt(context_data_val))\n            context_data_val = 0\n          } else {\n            context_data_position++\n          }\n          value = value >> 1\n        }\n      }\n      context_enlargeIn--\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits)\n        context_numBits++\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2\n    for (i = 0; i < context_numBits; i++) {\n      context_data_val = (context_data_val << 1) | (value & 1)\n      if (context_data_position == bitsPerChar - 1) {\n        context_data_position = 0\n        context_data.push(getCharFromInt(context_data_val))\n        context_data_val = 0\n      } else {\n        context_data_position++\n      }\n      value = value >> 1\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = context_data_val << 1\n      if (context_data_position == bitsPerChar - 1) {\n        context_data.push(getCharFromInt(context_data_val))\n        break\n      } else {\n        context_data_position++\n      }\n    }\n    return context_data.join('')\n  },\n\n  decompress: function (compressed: any): any {\n    if (compressed == null) {\n      return ''\n    }\n    if (compressed == '') {\n      return null\n    }\n    return LZString._decompress(compressed.length, 32768, function (index: any) {\n      return compressed.charCodeAt(index)\n    })\n  },\n\n  _decompress: function (length: any, resetValue: any, getNextValue: any): any {\n    const dictionary = [],\n      result = [],\n      data = { val: getNextValue(0), position: resetValue, index: 1 }\n\n    let next,\n      enlargeIn = 4,\n      dictSize = 4,\n      numBits = 3,\n      entry: any = '',\n      i,\n      w,\n      bits,\n      resb,\n      maxpower,\n      power,\n      c\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i\n    }\n\n    bits = 0\n    maxpower = Math.pow(2, 2)\n    power = 1\n    while (power != maxpower) {\n      resb = data.val & data.position\n      data.position >>= 1\n      if (data.position == 0) {\n        data.position = resetValue\n        data.val = getNextValue(data.index++)\n      }\n      bits |= (resb > 0 ? 1 : 0) * power\n      power <<= 1\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    switch ((next = bits)) {\n      case 0:\n        bits = 0\n        maxpower = Math.pow(2, 8)\n        power = 1\n        while (power != maxpower) {\n          resb = data.val & data.position\n          data.position >>= 1\n          if (data.position == 0) {\n            data.position = resetValue\n            data.val = getNextValue(data.index++)\n          }\n          bits |= (resb > 0 ? 1 : 0) * power\n          power <<= 1\n        }\n        c = f(bits)\n        break\n      case 1:\n        bits = 0\n        maxpower = Math.pow(2, 16)\n        power = 1\n        while (power != maxpower) {\n          resb = data.val & data.position\n          data.position >>= 1\n          if (data.position == 0) {\n            data.position = resetValue\n            data.val = getNextValue(data.index++)\n          }\n          bits |= (resb > 0 ? 1 : 0) * power\n          power <<= 1\n        }\n        c = f(bits)\n        break\n      case 2:\n        return ''\n    }\n    dictionary[3] = c\n    w = c\n    result.push(c)\n    while (true) {\n      if (data.index > length) {\n        return ''\n      }\n\n      bits = 0\n      maxpower = Math.pow(2, numBits)\n      power = 1\n      while (power != maxpower) {\n        resb = data.val & data.position\n        data.position >>= 1\n        if (data.position == 0) {\n          data.position = resetValue\n          data.val = getNextValue(data.index++)\n        }\n        bits |= (resb > 0 ? 1 : 0) * power\n        power <<= 1\n      }\n\n      switch ((c = bits)) {\n        case 0:\n          bits = 0\n          maxpower = Math.pow(2, 8)\n          power = 1\n          while (power != maxpower) {\n            resb = data.val & data.position\n            data.position >>= 1\n            if (data.position == 0) {\n              data.position = resetValue\n              data.val = getNextValue(data.index++)\n            }\n            bits |= (resb > 0 ? 1 : 0) * power\n            power <<= 1\n          }\n\n          dictionary[dictSize++] = f(bits)\n          c = dictSize - 1\n          enlargeIn--\n          break\n        case 1:\n          bits = 0\n          maxpower = Math.pow(2, 16)\n          power = 1\n          while (power != maxpower) {\n            resb = data.val & data.position\n            data.position >>= 1\n            if (data.position == 0) {\n              data.position = resetValue\n              data.val = getNextValue(data.index++)\n            }\n            bits |= (resb > 0 ? 1 : 0) * power\n            power <<= 1\n          }\n          dictionary[dictSize++] = f(bits)\n          c = dictSize - 1\n          enlargeIn--\n          break\n        case 2:\n          return result.join('')\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits)\n        numBits++\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c]\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0)\n        } else {\n          return null\n        }\n      }\n      result.push(entry)\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0)\n      enlargeIn--\n\n      w = entry\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits)\n        numBits++\n      }\n    }\n  },\n}\n","export class SimpleEventEmitter {\n  events: { [key: string]: ((...args: any[]) => void)[] } = {}\n\n  constructor() {\n    this.events = {}\n  }\n\n  on(event: string, listener: (...args: any[]) => void): () => void {\n    if (!this.events[event]) {\n      this.events[event] = []\n    }\n    this.events[event].push(listener)\n\n    return () => {\n      this.events[event] = this.events[event].filter((x) => x !== listener)\n    }\n  }\n\n  emit(event: string, payload: any): void {\n    for (const listener of this.events[event] || []) {\n      listener(payload)\n    }\n    for (const listener of this.events['*'] || []) {\n      listener(event, payload)\n    }\n  }\n}\n","// vendor from: https://github.com/LiosK/uuidv7/blob/f30b7a7faff73afbce0b27a46c638310f96912ba/src/index.ts\n// https://github.com/LiosK/uuidv7#license\n\n/**\n * uuidv7: An experimental implementation of the proposed UUID Version 7\n *\n * @license Apache-2.0\n * @copyright 2021-2023 LiosK\n * @packageDocumentation\n */\n\nconst DIGITS = \"0123456789abcdef\";\n\n/** Represents a UUID as a 16-byte byte array. */\nexport class UUID {\n  /** @param bytes - The 16-byte byte array representation. */\n  private constructor(readonly bytes: Readonly<Uint8Array>) {}\n\n  /**\n   * Creates an object from the internal representation, a 16-byte byte array\n   * containing the binary UUID representation in the big-endian byte order.\n   *\n   * This method does NOT shallow-copy the argument, and thus the created object\n   * holds the reference to the underlying buffer.\n   *\n   * @throws TypeError if the length of the argument is not 16.\n   */\n  static ofInner(bytes: Readonly<Uint8Array>): UUID {\n    if (bytes.length !== 16) {\n      throw new TypeError(\"not 128-bit length\");\n    } else {\n      return new UUID(bytes);\n    }\n  }\n\n  /**\n   * Builds a byte array from UUIDv7 field values.\n   *\n   * @param unixTsMs - A 48-bit `unix_ts_ms` field value.\n   * @param randA - A 12-bit `rand_a` field value.\n   * @param randBHi - The higher 30 bits of 62-bit `rand_b` field value.\n   * @param randBLo - The lower 32 bits of 62-bit `rand_b` field value.\n   * @throws RangeError if any field value is out of the specified range.\n   */\n  static fromFieldsV7(\n    unixTsMs: number,\n    randA: number,\n    randBHi: number,\n    randBLo: number,\n  ): UUID {\n    if (\n      !Number.isInteger(unixTsMs) ||\n      !Number.isInteger(randA) ||\n      !Number.isInteger(randBHi) ||\n      !Number.isInteger(randBLo) ||\n      unixTsMs < 0 ||\n      randA < 0 ||\n      randBHi < 0 ||\n      randBLo < 0 ||\n      unixTsMs > 0xffff_ffff_ffff ||\n      randA > 0xfff ||\n      randBHi > 0x3fff_ffff ||\n      randBLo > 0xffff_ffff\n    ) {\n      throw new RangeError(\"invalid field value\");\n    }\n\n    const bytes = new Uint8Array(16);\n    bytes[0] = unixTsMs / 2 ** 40;\n    bytes[1] = unixTsMs / 2 ** 32;\n    bytes[2] = unixTsMs / 2 ** 24;\n    bytes[3] = unixTsMs / 2 ** 16;\n    bytes[4] = unixTsMs / 2 ** 8;\n    bytes[5] = unixTsMs;\n    bytes[6] = 0x70 | (randA >>> 8);\n    bytes[7] = randA;\n    bytes[8] = 0x80 | (randBHi >>> 24);\n    bytes[9] = randBHi >>> 16;\n    bytes[10] = randBHi >>> 8;\n    bytes[11] = randBHi;\n    bytes[12] = randBLo >>> 24;\n    bytes[13] = randBLo >>> 16;\n    bytes[14] = randBLo >>> 8;\n    bytes[15] = randBLo;\n    return new UUID(bytes);\n  }\n\n  /**\n   * Builds a byte array from a string representation.\n   *\n   * This method accepts the following formats:\n   *\n   * - 32-digit hexadecimal format without hyphens: `0189dcd553117d408db09496a2eef37b`\n   * - 8-4-4-4-12 hyphenated format: `0189dcd5-5311-7d40-8db0-9496a2eef37b`\n   * - Hyphenated format with surrounding braces: `{0189dcd5-5311-7d40-8db0-9496a2eef37b}`\n   * - RFC 4122 URN format: `urn:uuid:0189dcd5-5311-7d40-8db0-9496a2eef37b`\n   *\n   * Leading and trailing whitespaces represents an error.\n   *\n   * @throws SyntaxError if the argument could not parse as a valid UUID string.\n   */\n  static parse(uuid: string): UUID {\n    let hex: string | undefined = undefined;\n    switch (uuid.length) {\n      case 32:\n        hex = /^[0-9a-f]{32}$/i.exec(uuid)?.[0];\n        break;\n      case 36:\n        hex =\n          /^([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/i\n            .exec(uuid)\n            ?.slice(1, 6)\n            .join(\"\");\n        break;\n      case 38:\n        hex =\n          /^\\{([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})\\}$/i\n            .exec(uuid)\n            ?.slice(1, 6)\n            .join(\"\");\n        break;\n      case 45:\n        hex =\n          /^urn:uuid:([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/i\n            .exec(uuid)\n            ?.slice(1, 6)\n            .join(\"\");\n        break;\n      default:\n        break;\n    }\n\n    if (hex) {\n      const inner = new Uint8Array(16);\n      for (let i = 0; i < 16; i += 4) {\n        const n = parseInt(hex.substring(2 * i, 2 * i + 8), 16);\n        inner[i + 0] = n >>> 24;\n        inner[i + 1] = n >>> 16;\n        inner[i + 2] = n >>> 8;\n        inner[i + 3] = n;\n      }\n      return new UUID(inner);\n    } else {\n      throw new SyntaxError(\"could not parse UUID string\");\n    }\n  }\n\n  /**\n   * @returns The 8-4-4-4-12 canonical hexadecimal string representation\n   * (`0189dcd5-5311-7d40-8db0-9496a2eef37b`).\n   */\n  toString(): string {\n    let text = \"\";\n    for (let i = 0; i < this.bytes.length; i++) {\n      text += DIGITS.charAt(this.bytes[i] >>> 4);\n      text += DIGITS.charAt(this.bytes[i] & 0xf);\n      if (i === 3 || i === 5 || i === 7 || i === 9) {\n        text += \"-\";\n      }\n    }\n    return text;\n  }\n\n  /**\n   * @returns The 32-digit hexadecimal representation without hyphens\n   * (`0189dcd553117d408db09496a2eef37b`).\n   */\n  toHex(): string {\n    let text = \"\";\n    for (let i = 0; i < this.bytes.length; i++) {\n      text += DIGITS.charAt(this.bytes[i] >>> 4);\n      text += DIGITS.charAt(this.bytes[i] & 0xf);\n    }\n    return text;\n  }\n\n  /** @returns The 8-4-4-4-12 canonical hexadecimal string representation. */\n  toJSON(): string {\n    return this.toString();\n  }\n\n  /**\n   * Reports the variant field value of the UUID or, if appropriate, \"NIL\" or\n   * \"MAX\".\n   *\n   * For convenience, this method reports \"NIL\" or \"MAX\" if `this` represents\n   * the Nil or Max UUID, although the Nil and Max UUIDs are technically\n   * subsumed under the variants `0b0` and `0b111`, respectively.\n   */\n  getVariant():\n    | \"VAR_0\"\n    | \"VAR_10\"\n    | \"VAR_110\"\n    | \"VAR_RESERVED\"\n    | \"NIL\"\n    | \"MAX\" {\n    const n = this.bytes[8] >>> 4;\n    if (n < 0) {\n      throw new Error(\"unreachable\");\n    } else if (n <= 0b0111) {\n      return this.bytes.every((e) => e === 0) ? \"NIL\" : \"VAR_0\";\n    } else if (n <= 0b1011) {\n      return \"VAR_10\";\n    } else if (n <= 0b1101) {\n      return \"VAR_110\";\n    } else if (n <= 0b1111) {\n      return this.bytes.every((e) => e === 0xff) ? \"MAX\" : \"VAR_RESERVED\";\n    } else {\n      throw new Error(\"unreachable\");\n    }\n  }\n\n  /**\n   * Returns the version field value of the UUID or `undefined` if the UUID does\n   * not have the variant field value of `0b10`.\n   */\n  getVersion(): number | undefined {\n    return this.getVariant() === \"VAR_10\" ? this.bytes[6] >>> 4 : undefined;\n  }\n\n  /** Creates an object from `this`. */\n  clone(): UUID {\n    return new UUID(this.bytes.slice(0));\n  }\n\n  /** Returns true if `this` is equivalent to `other`. */\n  equals(other: UUID): boolean {\n    return this.compareTo(other) === 0;\n  }\n\n  /**\n   * Returns a negative integer, zero, or positive integer if `this` is less\n   * than, equal to, or greater than `other`, respectively.\n   */\n  compareTo(other: UUID): number {\n    for (let i = 0; i < 16; i++) {\n      const diff = this.bytes[i] - other.bytes[i];\n      if (diff !== 0) {\n        return Math.sign(diff);\n      }\n    }\n    return 0;\n  }\n}\n\n/**\n * Encapsulates the monotonic counter state.\n *\n * This class provides APIs to utilize a separate counter state from that of the\n * global generator used by {@link uuidv7} and {@link uuidv7obj}. In addition to\n * the default {@link generate} method, this class has {@link generateOrAbort}\n * that is useful to absolutely guarantee the monotonically increasing order of\n * generated UUIDs. See their respective documentation for details.\n */\nexport class V7Generator {\n  private timestamp = 0;\n  private counter = 0;\n\n  /** The random number generator used by the generator. */\n  private readonly random: { nextUint32(): number };\n\n  /**\n   * Creates a generator object with the default random number generator, or\n   * with the specified one if passed as an argument. The specified random\n   * number generator should be cryptographically strong and securely seeded.\n   */\n  constructor(randomNumberGenerator?: {\n    /** Returns a 32-bit random unsigned integer. */\n    nextUint32(): number;\n  }) {\n    this.random = randomNumberGenerator ?? getDefaultRandom();\n  }\n\n  /**\n   * Generates a new UUIDv7 object from the current timestamp, or resets the\n   * generator upon significant timestamp rollback.\n   *\n   * This method returns a monotonically increasing UUID by reusing the previous\n   * timestamp even if the up-to-date timestamp is smaller than the immediately\n   * preceding UUID's. However, when such a clock rollback is considered\n   * significant (i.e., by more than ten seconds), this method resets the\n   * generator and returns a new UUID based on the given timestamp, breaking the\n   * increasing order of UUIDs.\n   *\n   * See {@link generateOrAbort} for the other mode of generation and\n   * {@link generateOrResetCore} for the low-level primitive.\n   */\n  generate(): UUID {\n    return this.generateOrResetCore(Date.now(), 10_000);\n  }\n\n  /**\n   * Generates a new UUIDv7 object from the current timestamp, or returns\n   * `undefined` upon significant timestamp rollback.\n   *\n   * This method returns a monotonically increasing UUID by reusing the previous\n   * timestamp even if the up-to-date timestamp is smaller than the immediately\n   * preceding UUID's. However, when such a clock rollback is considered\n   * significant (i.e., by more than ten seconds), this method aborts and\n   * returns `undefined` immediately.\n   *\n   * See {@link generate} for the other mode of generation and\n   * {@link generateOrAbortCore} for the low-level primitive.\n   */\n  generateOrAbort(): UUID | undefined {\n    return this.generateOrAbortCore(Date.now(), 10_000);\n  }\n\n  /**\n   * Generates a new UUIDv7 object from the `unixTsMs` passed, or resets the\n   * generator upon significant timestamp rollback.\n   *\n   * This method is equivalent to {@link generate} except that it takes a custom\n   * timestamp and clock rollback allowance.\n   *\n   * @param rollbackAllowance - The amount of `unixTsMs` rollback that is\n   * considered significant. A suggested value is `10_000` (milliseconds).\n   * @throws RangeError if `unixTsMs` is not a 48-bit positive integer.\n   */\n  generateOrResetCore(unixTsMs: number, rollbackAllowance: number): UUID {\n    let value = this.generateOrAbortCore(unixTsMs, rollbackAllowance);\n    if (value === undefined) {\n      // reset state and resume\n      this.timestamp = 0;\n      value = this.generateOrAbortCore(unixTsMs, rollbackAllowance)!;\n    }\n    return value;\n  }\n\n  /**\n   * Generates a new UUIDv7 object from the `unixTsMs` passed, or returns\n   * `undefined` upon significant timestamp rollback.\n   *\n   * This method is equivalent to {@link generateOrAbort} except that it takes a\n   * custom timestamp and clock rollback allowance.\n   *\n   * @param rollbackAllowance - The amount of `unixTsMs` rollback that is\n   * considered significant. A suggested value is `10_000` (milliseconds).\n   * @throws RangeError if `unixTsMs` is not a 48-bit positive integer.\n   */\n  generateOrAbortCore(\n    unixTsMs: number,\n    rollbackAllowance: number,\n  ): UUID | undefined {\n    const MAX_COUNTER = 0x3ff_ffff_ffff;\n\n    if (\n      !Number.isInteger(unixTsMs) ||\n      unixTsMs < 1 ||\n      unixTsMs > 0xffff_ffff_ffff\n    ) {\n      throw new RangeError(\"`unixTsMs` must be a 48-bit positive integer\");\n    } else if (rollbackAllowance < 0 || rollbackAllowance > 0xffff_ffff_ffff) {\n      throw new RangeError(\"`rollbackAllowance` out of reasonable range\");\n    }\n\n    if (unixTsMs > this.timestamp) {\n      this.timestamp = unixTsMs;\n      this.resetCounter();\n    } else if (unixTsMs + rollbackAllowance >= this.timestamp) {\n      // go on with previous timestamp if new one is not much smaller\n      this.counter++;\n      if (this.counter > MAX_COUNTER) {\n        // increment timestamp at counter overflow\n        this.timestamp++;\n        this.resetCounter();\n      }\n    } else {\n      // abort if clock went backwards to unbearable extent\n      return undefined;\n    }\n\n    return UUID.fromFieldsV7(\n      this.timestamp,\n      Math.trunc(this.counter / 2 ** 30),\n      this.counter & (2 ** 30 - 1),\n      this.random.nextUint32(),\n    );\n  }\n\n  /** Initializes the counter at a 42-bit random integer. */\n  private resetCounter(): void {\n    this.counter =\n      this.random.nextUint32() * 0x400 + (this.random.nextUint32() & 0x3ff);\n  }\n\n  /**\n   * Generates a new UUIDv4 object utilizing the random number generator inside.\n   *\n   * @internal\n   */\n  generateV4(): UUID {\n    const bytes = new Uint8Array(\n      Uint32Array.of(\n        this.random.nextUint32(),\n        this.random.nextUint32(),\n        this.random.nextUint32(),\n        this.random.nextUint32(),\n      ).buffer,\n    );\n    bytes[6] = 0x40 | (bytes[6] >>> 4);\n    bytes[8] = 0x80 | (bytes[8] >>> 2);\n    return UUID.ofInner(bytes);\n  }\n}\n\n/** A global flag to force use of cryptographically strong RNG. */\n// declare const UUIDV7_DENY_WEAK_RNG: boolean;\n\n/** Returns the default random number generator available in the environment. */\nconst getDefaultRandom = (): { nextUint32(): number } => {\n// fix: crypto isn't available in react-native, always use Math.random\n\n//   // detect Web Crypto API\n//   if (\n//     typeof crypto !== \"undefined\" &&\n//     typeof crypto.getRandomValues !== \"undefined\"\n//   ) {\n//     return new BufferedCryptoRandom();\n//   } else {\n//     // fall back on Math.random() unless the flag is set to true\n//     if (typeof UUIDV7_DENY_WEAK_RNG !== \"undefined\" && UUIDV7_DENY_WEAK_RNG) {\n//       throw new Error(\"no cryptographically strong RNG available\");\n//     }\n//     return {\n//       nextUint32: (): number =>\n//         Math.trunc(Math.random() * 0x1_0000) * 0x1_0000 +\n//         Math.trunc(Math.random() * 0x1_0000),\n//     };\n//   }\n  return {\n    nextUint32: (): number =>\n      Math.trunc(Math.random() * 0x1_0000) * 0x1_0000 +\n      Math.trunc(Math.random() * 0x1_0000),\n  };\n};\n\n// /**\n//  * Wraps `crypto.getRandomValues()` to enable buffering; this uses a small\n//  * buffer by default to avoid both unbearable throughput decline in some\n//  * environments and the waste of time and space for unused values.\n//  */\n// class BufferedCryptoRandom {\n//   private readonly buffer = new Uint32Array(8);\n//   private cursor = 0xffff;\n//   nextUint32(): number {\n//     if (this.cursor >= this.buffer.length) {\n//       crypto.getRandomValues(this.buffer);\n//       this.cursor = 0;\n//     }\n//     return this.buffer[this.cursor++];\n//   }\n// }\n\nlet defaultGenerator: V7Generator | undefined;\n\n/**\n * Generates a UUIDv7 string.\n *\n * @returns The 8-4-4-4-12 canonical hexadecimal string representation\n * (\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\").\n */\nexport const uuidv7 = (): string => uuidv7obj().toString();\n\n/** Generates a UUIDv7 object. */\nexport const uuidv7obj = (): UUID =>\n  (defaultGenerator || (defaultGenerator = new V7Generator())).generate();\n\n/**\n * Generates a UUIDv4 string.\n *\n * @returns The 8-4-4-4-12 canonical hexadecimal string representation\n * (\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\").\n */\nexport const uuidv4 = (): string => uuidv4obj().toString();\n\n/** Generates a UUIDv4 object. */\nexport const uuidv4obj = (): UUID =>\n  (defaultGenerator || (defaultGenerator = new V7Generator())).generateV4();\n","import {\n  PostHogFetchOptions,\n  PostHogFetchResponse,\n  PostHogQueueItem,\n  PostHogAutocaptureElement,\n  PostHogDecideResponse,\n  PostHogCoreOptions,\n  PostHogEventProperties,\n  PostHogPersistedProperty,\n  PostHogCaptureOptions,\n  JsonType,\n} from './types'\nimport {\n  assert,\n  currentISOTime,\n  currentTimestamp,\n  removeTrailingSlash,\n  retriable,\n  RetriableOptions,\n  safeSetTimeout,\n} from './utils'\nexport * as utils from './utils'\nimport { LZString } from './lz-string'\nimport { SimpleEventEmitter } from './eventemitter'\nimport { uuidv7 } from './vendor/uuidv7'\n\nclass PostHogFetchHttpError extends Error {\n  name = 'PostHogFetchHttpError'\n\n  constructor(public response: PostHogFetchResponse) {\n    super('HTTP error while fetching PostHog: ' + response.status)\n  }\n}\n\nclass PostHogFetchNetworkError extends Error {\n  name = 'PostHogFetchNetworkError'\n\n  constructor(public error: unknown) {\n    // TRICKY: \"cause\" is a newer property but is just ignored otherwise. Cast to any to ignore the type issue.\n    // eslint-disable-next-line @typescript-eslint/prefer-ts-expect-error\n    // @ts-ignore\n    super('Network error while fetching PostHog', error instanceof Error ? { cause: error } : {})\n  }\n}\n\nfunction isPostHogFetchError(err: any): boolean {\n  return typeof err === 'object' && (err instanceof PostHogFetchHttpError || err instanceof PostHogFetchNetworkError)\n}\n\nexport abstract class PostHogCoreStateless {\n  // options\n  readonly apiKey: string\n  readonly host: string\n  readonly flushAt: number\n  private maxBatchSize: number\n  private maxQueueSize: number\n  private flushInterval: number\n  private flushPromise: Promise<any> | null = null\n  private requestTimeout: number\n  private featureFlagsRequestTimeoutMs: number\n  private captureMode: 'form' | 'json'\n  private removeDebugCallback?: () => void\n  private disableGeoip: boolean = true\n  private historicalMigration: boolean = false\n  protected disabled = false\n\n  private defaultOptIn: boolean = true\n  private pendingPromises: Record<string, Promise<any>> = {}\n\n  // internal\n  protected _events = new SimpleEventEmitter()\n  protected _flushTimer?: any\n  protected _retryOptions: RetriableOptions\n  protected _initPromise: Promise<void>\n  protected _isInitialized: boolean = false\n\n  // Abstract methods to be overridden by implementations\n  abstract fetch(url: string, options: PostHogFetchOptions): Promise<PostHogFetchResponse>\n  abstract getLibraryId(): string\n  abstract getLibraryVersion(): string\n  abstract getCustomUserAgent(): string | void\n\n  // This is our abstracted storage. Each implementation should handle its own\n  abstract getPersistedProperty<T>(key: PostHogPersistedProperty): T | undefined\n  abstract setPersistedProperty<T>(key: PostHogPersistedProperty, value: T | null): void\n\n  constructor(apiKey: string, options?: PostHogCoreOptions) {\n    assert(apiKey, \"You must pass your PostHog project's api key.\")\n\n    this.apiKey = apiKey\n    this.host = removeTrailingSlash(options?.host || 'https://us.i.posthog.com')\n    this.flushAt = options?.flushAt ? Math.max(options?.flushAt, 1) : 20\n    this.maxBatchSize = Math.max(this.flushAt, options?.maxBatchSize ?? 100)\n    this.maxQueueSize = Math.max(this.flushAt, options?.maxQueueSize ?? 1000)\n    this.flushInterval = options?.flushInterval ?? 10000\n    this.captureMode = options?.captureMode || 'json'\n\n    // If enable is explicitly set to false we override the optout\n    this.defaultOptIn = options?.defaultOptIn ?? true\n\n    this._retryOptions = {\n      retryCount: options?.fetchRetryCount ?? 3,\n      retryDelay: options?.fetchRetryDelay ?? 3000, // 3 seconds\n      retryCheck: isPostHogFetchError,\n    }\n    this.requestTimeout = options?.requestTimeout ?? 10000 // 10 seconds\n    this.featureFlagsRequestTimeoutMs = options?.featureFlagsRequestTimeoutMs ?? 3000 // 3 seconds\n    this.disableGeoip = options?.disableGeoip ?? true\n    this.disabled = options?.disabled ?? false\n    this.historicalMigration = options?.historicalMigration ?? false\n    // Init promise allows the derived class to block calls until it is ready\n    this._initPromise = Promise.resolve()\n    this._isInitialized = true\n  }\n\n  protected logMsgIfDebug(fn: () => void): void {\n    if (this.isDebug) {\n      fn()\n    }\n  }\n\n  protected wrap(fn: () => void): void {\n    if (this.disabled) {\n      this.logMsgIfDebug(() => console.warn('[PostHog] The client is disabled'))\n      return\n    }\n\n    if (this._isInitialized) {\n      // NOTE: We could also check for the \"opt in\" status here...\n      return fn()\n    }\n\n    this._initPromise.then(() => fn())\n  }\n\n  protected getCommonEventProperties(): any {\n    return {\n      $lib: this.getLibraryId(),\n      $lib_version: this.getLibraryVersion(),\n    }\n  }\n\n  public get optedOut(): boolean {\n    return this.getPersistedProperty(PostHogPersistedProperty.OptedOut) ?? !this.defaultOptIn\n  }\n\n  async optIn(): Promise<void> {\n    this.wrap(() => {\n      this.setPersistedProperty(PostHogPersistedProperty.OptedOut, false)\n    })\n  }\n\n  async optOut(): Promise<void> {\n    this.wrap(() => {\n      this.setPersistedProperty(PostHogPersistedProperty.OptedOut, true)\n    })\n  }\n\n  on(event: string, cb: (...args: any[]) => void): () => void {\n    return this._events.on(event, cb)\n  }\n\n  debug(enabled: boolean = true): void {\n    this.removeDebugCallback?.()\n\n    if (enabled) {\n      const removeDebugCallback = this.on('*', (event, payload) => console.log('PostHog Debug', event, payload))\n      this.removeDebugCallback = () => {\n        removeDebugCallback()\n        this.removeDebugCallback = undefined\n      }\n    }\n  }\n\n  get isDebug(): boolean {\n    return !!this.removeDebugCallback\n  }\n\n  get isDisabled(): boolean {\n    return this.disabled\n  }\n\n  private buildPayload(payload: { distinct_id: string; event: string; properties?: PostHogEventProperties }): any {\n    return {\n      distinct_id: payload.distinct_id,\n      event: payload.event,\n      properties: {\n        ...(payload.properties || {}),\n        ...this.getCommonEventProperties(), // Common PH props\n      },\n    }\n  }\n\n  protected addPendingPromise<T>(promise: Promise<T>): Promise<T> {\n    const promiseUUID = uuidv7()\n    this.pendingPromises[promiseUUID] = promise\n    promise\n      .catch(() => {})\n      .finally(() => {\n        delete this.pendingPromises[promiseUUID]\n      })\n\n    return promise\n  }\n\n  /***\n   *** TRACKING\n   ***/\n  protected identifyStateless(\n    distinctId: string,\n    properties?: PostHogEventProperties,\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      // The properties passed to identifyStateless are event properties.\n      // To add person properties, pass in all person properties to the `$set` and `$set_once` keys.\n\n      const payload = {\n        ...this.buildPayload({\n          distinct_id: distinctId,\n          event: '$identify',\n          properties,\n        }),\n      }\n\n      this.enqueue('identify', payload, options)\n    })\n  }\n\n  protected captureStateless(\n    distinctId: string,\n    event: string,\n    properties?: { [key: string]: any },\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      const payload = this.buildPayload({ distinct_id: distinctId, event, properties })\n      this.enqueue('capture', payload, options)\n    })\n  }\n\n  protected aliasStateless(\n    alias: string,\n    distinctId: string,\n    properties?: { [key: string]: any },\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      const payload = this.buildPayload({\n        event: '$create_alias',\n        distinct_id: distinctId,\n        properties: {\n          ...(properties || {}),\n          distinct_id: distinctId,\n          alias,\n        },\n      })\n\n      this.enqueue('alias', payload, options)\n    })\n  }\n\n  /***\n   *** GROUPS\n   ***/\n  protected groupIdentifyStateless(\n    groupType: string,\n    groupKey: string | number,\n    groupProperties?: PostHogEventProperties,\n    options?: PostHogCaptureOptions,\n    distinctId?: string,\n    eventProperties?: PostHogEventProperties\n  ): void {\n    this.wrap(() => {\n      const payload = this.buildPayload({\n        distinct_id: distinctId || `$${groupType}_${groupKey}`,\n        event: '$groupidentify',\n        properties: {\n          $group_type: groupType,\n          $group_key: groupKey,\n          $group_set: groupProperties || {},\n          ...(eventProperties || {}),\n        },\n      })\n\n      this.enqueue('capture', payload, options)\n    })\n  }\n\n  /***\n   *** FEATURE FLAGS\n   ***/\n\n  protected async getDecide(\n    distinctId: string,\n    groups: Record<string, string | number> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    extraPayload: Record<string, any> = {}\n  ): Promise<PostHogDecideResponse | undefined> {\n    await this._initPromise\n\n    const url = `${this.host}/decide/?v=3`\n    const fetchOptions: PostHogFetchOptions = {\n      method: 'POST',\n      headers: { ...this.getCustomHeaders(), 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        token: this.apiKey,\n        distinct_id: distinctId,\n        groups,\n        person_properties: personProperties,\n        group_properties: groupProperties,\n        ...extraPayload,\n      }),\n    }\n    // Don't retry /decide API calls\n    return this.fetchWithRetry(url, fetchOptions, { retryCount: 0 }, this.featureFlagsRequestTimeoutMs)\n      .then((response) => response.json() as Promise<PostHogDecideResponse>)\n      .catch((error) => {\n        this._events.emit('error', error)\n        return undefined\n      })\n  }\n\n  protected async getFeatureFlagStateless(\n    key: string,\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean\n  ): Promise<boolean | string | undefined> {\n    await this._initPromise\n\n    const featureFlags = await this.getFeatureFlagsStateless(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties,\n      disableGeoip\n    )\n\n    if (!featureFlags) {\n      // If we haven't loaded flags yet, or errored out, we respond with undefined\n      return undefined\n    }\n\n    let response = featureFlags[key]\n    // `/decide` v3 returns all flags\n\n    if (response === undefined) {\n      // For cases where the flag is unknown, return false\n      response = false\n    }\n\n    // If we have flags we either return the value (true or string) or false\n    return response\n  }\n\n  protected async getFeatureFlagPayloadStateless(\n    key: string,\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean\n  ): Promise<JsonType | undefined> {\n    await this._initPromise\n\n    const payloads = await this.getFeatureFlagPayloadsStateless(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties,\n      disableGeoip\n    )\n\n    if (!payloads) {\n      return undefined\n    }\n\n    const response = payloads[key]\n\n    // Undefined means a loading or missing data issue. Null means evaluation happened and there was no match\n    if (response === undefined) {\n      return null\n    }\n\n    return response\n  }\n\n  protected async getFeatureFlagPayloadsStateless(\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean\n  ): Promise<PostHogDecideResponse['featureFlagPayloads'] | undefined> {\n    await this._initPromise\n\n    const payloads = (\n      await this.getFeatureFlagsAndPayloadsStateless(\n        distinctId,\n        groups,\n        personProperties,\n        groupProperties,\n        disableGeoip\n      )\n    ).payloads\n\n    return payloads\n  }\n\n  protected _parsePayload(response: any): any {\n    try {\n      return JSON.parse(response)\n    } catch {\n      return response\n    }\n  }\n\n  protected async getFeatureFlagsStateless(\n    distinctId: string,\n    groups: Record<string, string | number> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean\n  ): Promise<PostHogDecideResponse['featureFlags'] | undefined> {\n    await this._initPromise\n\n    return (\n      await this.getFeatureFlagsAndPayloadsStateless(\n        distinctId,\n        groups,\n        personProperties,\n        groupProperties,\n        disableGeoip\n      )\n    ).flags\n  }\n\n  protected async getFeatureFlagsAndPayloadsStateless(\n    distinctId: string,\n    groups: Record<string, string | number> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean\n  ): Promise<{\n    flags: PostHogDecideResponse['featureFlags'] | undefined\n    payloads: PostHogDecideResponse['featureFlagPayloads'] | undefined\n  }> {\n    await this._initPromise\n\n    const extraPayload: Record<string, any> = {}\n    if (disableGeoip ?? this.disableGeoip) {\n      extraPayload['geoip_disable'] = true\n    }\n    const decideResponse = await this.getDecide(distinctId, groups, personProperties, groupProperties, extraPayload)\n\n    const flags = decideResponse?.featureFlags\n    const payloads = decideResponse?.featureFlagPayloads\n\n    let parsedPayloads = payloads\n\n    if (payloads) {\n      parsedPayloads = Object.fromEntries(Object.entries(payloads).map(([k, v]) => [k, this._parsePayload(v)]))\n    }\n\n    return {\n      flags,\n      payloads: parsedPayloads,\n    }\n  }\n\n  /***\n   *** QUEUEING AND FLUSHING\n   ***/\n  protected enqueue(type: string, _message: any, options?: PostHogCaptureOptions): void {\n    this.wrap(() => {\n      if (this.optedOut) {\n        this._events.emit(type, `Library is disabled. Not sending event. To re-enable, call posthog.optIn()`)\n        return\n      }\n\n      const message = {\n        ..._message,\n        type: type,\n        library: this.getLibraryId(),\n        library_version: this.getLibraryVersion(),\n        timestamp: options?.timestamp ? options?.timestamp : currentISOTime(),\n        uuid: options?.uuid ? options.uuid : uuidv7(),\n      }\n\n      const addGeoipDisableProperty = options?.disableGeoip ?? this.disableGeoip\n      if (addGeoipDisableProperty) {\n        if (!message.properties) {\n          message.properties = {}\n        }\n        message['properties']['$geoip_disable'] = true\n      }\n\n      if (message.distinctId) {\n        message.distinct_id = message.distinctId\n        delete message.distinctId\n      }\n\n      const queue = this.getPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue) || []\n\n      if (queue.length >= this.maxQueueSize) {\n        queue.shift()\n        this.logMsgIfDebug(() => console.info('Queue is full, the oldest event is dropped.'))\n      }\n\n      queue.push({ message })\n      this.setPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue, queue)\n\n      this._events.emit(type, message)\n\n      // Flush queued events if we meet the flushAt length\n      if (queue.length >= this.flushAt) {\n        this.flushBackground()\n      }\n\n      if (this.flushInterval && !this._flushTimer) {\n        this._flushTimer = safeSetTimeout(() => this.flushBackground(), this.flushInterval)\n      }\n    })\n  }\n\n  private clearFlushTimer(): void {\n    if (this._flushTimer) {\n      clearTimeout(this._flushTimer)\n      this._flushTimer = undefined\n    }\n  }\n\n  /**\n   * Helper for flushing the queue in the background\n   * Avoids unnecessary promise errors\n   */\n  private flushBackground(): void {\n    void this.flush().catch(() => {})\n  }\n\n  async flush(): Promise<any[]> {\n    if (!this.flushPromise) {\n      this.flushPromise = this._flush().finally(() => {\n        this.flushPromise = null\n      })\n      this.addPendingPromise(this.flushPromise)\n    }\n    return this.flushPromise\n  }\n\n  protected getCustomHeaders(): { [key: string]: string } {\n    // Don't set the user agent if we're not on a browser. The latest spec allows\n    // the User-Agent header (see https://fetch.spec.whatwg.org/#terminology-headers\n    // and https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader),\n    // but browsers such as Chrome and Safari have not caught up.\n    const customUserAgent = this.getCustomUserAgent()\n    const headers: { [key: string]: string } = {}\n    if (customUserAgent && customUserAgent !== '') {\n      headers['User-Agent'] = customUserAgent\n    }\n    return headers\n  }\n\n  private async _flush(): Promise<any[]> {\n    this.clearFlushTimer()\n    await this._initPromise\n\n    const queue = this.getPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue) || []\n\n    if (!queue.length) {\n      return []\n    }\n\n    const items = queue.slice(0, this.maxBatchSize)\n    const messages = items.map((item) => item.message)\n\n    const persistQueueChange = (): void => {\n      const refreshedQueue = this.getPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue) || []\n      this.setPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue, refreshedQueue.slice(items.length))\n    }\n\n    const data: Record<string, any> = {\n      api_key: this.apiKey,\n      batch: messages,\n      sent_at: currentISOTime(),\n    }\n\n    if (this.historicalMigration) {\n      data.historical_migration = true\n    }\n\n    const payload = JSON.stringify(data)\n\n    const url =\n      this.captureMode === 'form'\n        ? `${this.host}/e/?ip=1&_=${currentTimestamp()}&v=${this.getLibraryVersion()}`\n        : `${this.host}/batch/`\n\n    const fetchOptions: PostHogFetchOptions =\n      this.captureMode === 'form'\n        ? {\n            method: 'POST',\n            mode: 'no-cors',\n            credentials: 'omit',\n            headers: { ...this.getCustomHeaders(), 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `data=${encodeURIComponent(LZString.compressToBase64(payload))}&compression=lz64`,\n          }\n        : {\n            method: 'POST',\n            headers: { ...this.getCustomHeaders(), 'Content-Type': 'application/json' },\n            body: payload,\n          }\n\n    try {\n      await this.fetchWithRetry(url, fetchOptions)\n    } catch (err) {\n      // depending on the error type, eg a malformed JSON or broken queue, it'll always return an error\n      // and this will be an endless loop, in this case, if the error isn't a network issue, we always remove the items from the queue\n      if (!(err instanceof PostHogFetchNetworkError)) {\n        persistQueueChange()\n      }\n      this._events.emit('error', err)\n\n      throw err\n    }\n\n    persistQueueChange()\n    this._events.emit('flush', messages)\n\n    return messages\n  }\n\n  private async fetchWithRetry(\n    url: string,\n    options: PostHogFetchOptions,\n    retryOptions?: Partial<RetriableOptions>,\n    requestTimeout?: number\n  ): Promise<PostHogFetchResponse> {\n    ;(AbortSignal as any).timeout ??= function timeout(ms: number) {\n      const ctrl = new AbortController()\n      setTimeout(() => ctrl.abort(), ms)\n      return ctrl.signal\n    }\n\n    return await retriable(\n      async () => {\n        let res: PostHogFetchResponse | null = null\n        try {\n          res = await this.fetch(url, {\n            signal: (AbortSignal as any).timeout(requestTimeout ?? this.requestTimeout),\n            ...options,\n          })\n        } catch (e) {\n          // fetch will only throw on network errors or on timeouts\n          throw new PostHogFetchNetworkError(e)\n        }\n        // If we're in no-cors mode, we can't access the response status\n        // We only throw on HTTP errors if we're not in no-cors mode\n        // https://developer.mozilla.org/en-US/docs/Web/API/Request/mode#no-cors\n        const isNoCors = options.mode === 'no-cors'\n        if (!isNoCors && (res.status < 200 || res.status >= 400)) {\n          throw new PostHogFetchHttpError(res)\n        }\n        return res\n      },\n      { ...this._retryOptions, ...retryOptions }\n    )\n  }\n\n  async shutdown(shutdownTimeoutMs: number = 30000): Promise<void> {\n    // A little tricky - we want to have a max shutdown time and enforce it, even if that means we have some\n    // dangling promises. We'll keep track of the timeout and resolve/reject based on that.\n\n    await this._initPromise\n    let hasTimedOut = false\n    this.clearFlushTimer()\n\n    const doShutdown = async (): Promise<void> => {\n      try {\n        await Promise.all(Object.values(this.pendingPromises))\n\n        while (true) {\n          const queue = this.getPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue) || []\n\n          if (queue.length === 0) {\n            break\n          }\n\n          // flush again to make sure we send all events, some of which might've been added\n          // while we were waiting for the pending promises to resolve\n          // For example, see sendFeatureFlags in posthog-node/src/posthog-node.ts::capture\n          await this.flush()\n\n          if (hasTimedOut) {\n            break\n          }\n        }\n      } catch (e) {\n        if (!isPostHogFetchError(e)) {\n          throw e\n        }\n        this.logMsgIfDebug(() => console.error('Error while shutting down PostHog', e))\n      }\n    }\n\n    return Promise.race([\n      new Promise<void>((_, reject) => {\n        safeSetTimeout(() => {\n          this.logMsgIfDebug(() => console.error('Timed out while shutting down PostHog'))\n          hasTimedOut = true\n          reject('Timeout while shutting down PostHog. Some events may not have been sent.')\n        }, shutdownTimeoutMs)\n      }),\n      doShutdown(),\n    ])\n  }\n}\n\nexport abstract class PostHogCore extends PostHogCoreStateless {\n  // options\n  private sendFeatureFlagEvent: boolean\n  private flagCallReported: { [key: string]: boolean } = {}\n\n  // internal\n  protected _decideResponsePromise?: Promise<PostHogDecideResponse | undefined> // TODO: come back to this, fix typing\n  protected _sessionExpirationTimeSeconds: number\n  protected sessionProps: PostHogEventProperties = {}\n\n  constructor(apiKey: string, options?: PostHogCoreOptions) {\n    // Default for stateful mode is to not disable geoip. Only override if explicitly set\n    const disableGeoipOption = options?.disableGeoip ?? false\n\n    // Default for stateful mode is to timeout at 10s. Only override if explicitly set\n    const featureFlagsRequestTimeoutMs = options?.featureFlagsRequestTimeoutMs ?? 10000 // 10 seconds\n\n    super(apiKey, { ...options, disableGeoip: disableGeoipOption, featureFlagsRequestTimeoutMs })\n\n    this.sendFeatureFlagEvent = options?.sendFeatureFlagEvent ?? true\n    this._sessionExpirationTimeSeconds = options?.sessionExpirationTimeSeconds ?? 1800 // 30 minutes\n  }\n\n  protected setupBootstrap(options?: Partial<PostHogCoreOptions>): void {\n    const bootstrap = options?.bootstrap\n    if (!bootstrap) {\n      return\n    }\n\n    // bootstrap options are only set if no persisted values are found\n    // this is to prevent overwriting existing values\n    if (bootstrap.distinctId) {\n      if (bootstrap.isIdentifiedId) {\n        const distinctId = this.getPersistedProperty(PostHogPersistedProperty.DistinctId)\n\n        if (!distinctId) {\n          this.setPersistedProperty(PostHogPersistedProperty.DistinctId, bootstrap.distinctId)\n        }\n      } else {\n        const anonymousId = this.getPersistedProperty(PostHogPersistedProperty.AnonymousId)\n\n        if (!anonymousId) {\n          this.setPersistedProperty(PostHogPersistedProperty.AnonymousId, bootstrap.distinctId)\n        }\n      }\n    }\n\n    const bootstrapfeatureFlags = bootstrap.featureFlags\n    if (bootstrapfeatureFlags && Object.keys(bootstrapfeatureFlags).length) {\n      const bootstrapFlags = Object.keys(bootstrapfeatureFlags)\n        .filter((flag) => !!bootstrapfeatureFlags[flag])\n        .reduce(\n          (res: Record<string, string | boolean>, key) => ((res[key] = bootstrapfeatureFlags[key] || false), res),\n          {}\n        )\n\n      if (Object.keys(bootstrapFlags).length) {\n        this.setPersistedProperty(PostHogPersistedProperty.BootstrapFeatureFlags, bootstrapFlags)\n\n        const currentFlags =\n          this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(PostHogPersistedProperty.FeatureFlags) || {}\n        const newFeatureFlags = { ...bootstrapFlags, ...currentFlags }\n        this.setKnownFeatureFlags(newFeatureFlags)\n      }\n\n      const bootstrapFlagPayloads = bootstrap.featureFlagPayloads\n      if (bootstrapFlagPayloads && Object.keys(bootstrapFlagPayloads).length) {\n        this.setPersistedProperty(PostHogPersistedProperty.BootstrapFeatureFlagPayloads, bootstrapFlagPayloads)\n\n        const currentFlagPayloads =\n          this.getPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n            PostHogPersistedProperty.FeatureFlagPayloads\n          ) || {}\n        const newFeatureFlagPayloads = { ...bootstrapFlagPayloads, ...currentFlagPayloads }\n        this.setKnownFeatureFlagPayloads(newFeatureFlagPayloads)\n      }\n    }\n  }\n\n  // NOTE: Props are lazy loaded from localstorage hence the complex getter setter logic\n  private get props(): PostHogEventProperties {\n    if (!this._props) {\n      this._props = this.getPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.Props)\n    }\n    return this._props || {}\n  }\n\n  private set props(val: PostHogEventProperties | undefined) {\n    this._props = val\n  }\n\n  private clearProps(): void {\n    this.props = undefined\n    this.sessionProps = {}\n    this.flagCallReported = {}\n  }\n\n  private _props: PostHogEventProperties | undefined\n\n  on(event: string, cb: (...args: any[]) => void): () => void {\n    return this._events.on(event, cb)\n  }\n\n  reset(propertiesToKeep?: PostHogPersistedProperty[]): void {\n    this.wrap(() => {\n      const allPropertiesToKeep = [PostHogPersistedProperty.Queue, ...(propertiesToKeep || [])]\n\n      // clean up props\n      this.clearProps()\n\n      for (const key of <(keyof typeof PostHogPersistedProperty)[]>Object.keys(PostHogPersistedProperty)) {\n        if (!allPropertiesToKeep.includes(PostHogPersistedProperty[key])) {\n          this.setPersistedProperty((PostHogPersistedProperty as any)[key], null)\n        }\n      }\n\n      this.reloadFeatureFlags()\n    })\n  }\n\n  protected getCommonEventProperties(): any {\n    const featureFlags = this.getFeatureFlags()\n\n    const featureVariantProperties: Record<string, string | boolean> = {}\n    if (featureFlags) {\n      for (const [feature, variant] of Object.entries(featureFlags)) {\n        featureVariantProperties[`$feature/${feature}`] = variant\n      }\n    }\n    return {\n      $active_feature_flags: featureFlags ? Object.keys(featureFlags) : undefined,\n      ...featureVariantProperties,\n      ...super.getCommonEventProperties(),\n    }\n  }\n\n  private enrichProperties(properties?: PostHogEventProperties): any {\n    return {\n      ...this.props, // Persisted properties first\n      ...this.sessionProps, // Followed by session properties\n      ...(properties || {}), // Followed by user specified properties\n      ...this.getCommonEventProperties(), // Followed by FF props\n      $session_id: this.getSessionId(),\n    }\n  }\n\n  /**\n   * * @returns {string} The stored session ID for the current session. This may be an empty string if the client is not yet fully initialized.\n   */\n  getSessionId(): string {\n    if (!this._isInitialized) {\n      return ''\n    }\n\n    let sessionId = this.getPersistedProperty<string>(PostHogPersistedProperty.SessionId)\n    const sessionTimestamp = this.getPersistedProperty<number>(PostHogPersistedProperty.SessionLastTimestamp) || 0\n    if (!sessionId || Date.now() - sessionTimestamp > this._sessionExpirationTimeSeconds * 1000) {\n      sessionId = uuidv7()\n      this.setPersistedProperty(PostHogPersistedProperty.SessionId, sessionId)\n    }\n    this.setPersistedProperty(PostHogPersistedProperty.SessionLastTimestamp, Date.now())\n\n    return sessionId\n  }\n\n  resetSessionId(): void {\n    this.wrap(() => {\n      this.setPersistedProperty(PostHogPersistedProperty.SessionId, null)\n      this.setPersistedProperty(PostHogPersistedProperty.SessionLastTimestamp, null)\n    })\n  }\n\n  /**\n   * * @returns {string} The stored anonymous ID. This may be an empty string if the client is not yet fully initialized.\n   */\n  getAnonymousId(): string {\n    if (!this._isInitialized) {\n      return ''\n    }\n\n    let anonId = this.getPersistedProperty<string>(PostHogPersistedProperty.AnonymousId)\n    if (!anonId) {\n      anonId = uuidv7()\n      this.setPersistedProperty(PostHogPersistedProperty.AnonymousId, anonId)\n    }\n    return anonId\n  }\n\n  /**\n   * * @returns {string} The stored distinct ID. This may be an empty string if the client is not yet fully initialized.\n   */\n  getDistinctId(): string {\n    if (!this._isInitialized) {\n      return ''\n    }\n\n    return this.getPersistedProperty<string>(PostHogPersistedProperty.DistinctId) || this.getAnonymousId()\n  }\n\n  async unregister(property: string): Promise<void> {\n    this.wrap(() => {\n      delete this.props[property]\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.Props, this.props)\n    })\n  }\n\n  async register(properties: { [key: string]: any }): Promise<void> {\n    this.wrap(() => {\n      this.props = {\n        ...this.props,\n        ...properties,\n      }\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.Props, this.props)\n    })\n  }\n\n  registerForSession(properties: { [key: string]: any }): void {\n    this.sessionProps = {\n      ...this.sessionProps,\n      ...properties,\n    }\n  }\n\n  unregisterForSession(property: string): void {\n    delete this.sessionProps[property]\n  }\n\n  /***\n   *** TRACKING\n   ***/\n  identify(distinctId?: string, properties?: PostHogEventProperties, options?: PostHogCaptureOptions): void {\n    this.wrap(() => {\n      const previousDistinctId = this.getDistinctId()\n      distinctId = distinctId || previousDistinctId\n\n      if (properties?.$groups) {\n        this.groups(properties.$groups)\n      }\n\n      // promote $set and $set_once to top level\n      const userPropsOnce = properties?.$set_once\n      delete properties?.$set_once\n\n      // if no $set is provided we assume all properties are $set\n      const userProps = properties?.$set || properties\n\n      const allProperties = this.enrichProperties({\n        $anon_distinct_id: this.getAnonymousId(),\n        $set: userProps,\n        $set_once: userPropsOnce,\n      })\n\n      if (distinctId !== previousDistinctId) {\n        // We keep the AnonymousId to be used by decide calls and identify to link the previousId\n        this.setPersistedProperty(PostHogPersistedProperty.AnonymousId, previousDistinctId)\n        this.setPersistedProperty(PostHogPersistedProperty.DistinctId, distinctId)\n        this.reloadFeatureFlags()\n      }\n\n      super.identifyStateless(distinctId, allProperties, options)\n    })\n  }\n\n  capture(event: string, properties?: { [key: string]: any }, options?: PostHogCaptureOptions): void {\n    this.wrap(() => {\n      const distinctId = this.getDistinctId()\n\n      if (properties?.$groups) {\n        this.groups(properties.$groups)\n      }\n\n      const allProperties = this.enrichProperties(properties)\n\n      super.captureStateless(distinctId, event, allProperties, options)\n    })\n  }\n\n  alias(alias: string): void {\n    this.wrap(() => {\n      const distinctId = this.getDistinctId()\n      const allProperties = this.enrichProperties({})\n\n      super.aliasStateless(alias, distinctId, allProperties)\n    })\n  }\n\n  autocapture(\n    eventType: string,\n    elements: PostHogAutocaptureElement[],\n    properties: PostHogEventProperties = {},\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      const distinctId = this.getDistinctId()\n      const payload = {\n        distinct_id: distinctId,\n        event: '$autocapture',\n        properties: {\n          ...this.enrichProperties(properties),\n          $event_type: eventType,\n          $elements: elements,\n        },\n      }\n\n      this.enqueue('autocapture', payload, options)\n    })\n  }\n\n  /***\n   *** GROUPS\n   ***/\n\n  groups(groups: { [type: string]: string | number }): void {\n    this.wrap(() => {\n      // Get persisted groups\n      const existingGroups = this.props.$groups || {}\n\n      this.register({\n        $groups: {\n          ...existingGroups,\n          ...groups,\n        },\n      })\n\n      if (Object.keys(groups).find((type) => existingGroups[type] !== groups[type])) {\n        this.reloadFeatureFlags()\n      }\n    })\n  }\n\n  group(\n    groupType: string,\n    groupKey: string | number,\n    groupProperties?: PostHogEventProperties,\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      this.groups({\n        [groupType]: groupKey,\n      })\n\n      if (groupProperties) {\n        this.groupIdentify(groupType, groupKey, groupProperties, options)\n      }\n    })\n  }\n\n  groupIdentify(\n    groupType: string,\n    groupKey: string | number,\n    groupProperties?: PostHogEventProperties,\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      const distinctId = this.getDistinctId()\n      const eventProperties = this.enrichProperties({})\n      super.groupIdentifyStateless(groupType, groupKey, groupProperties, options, distinctId, eventProperties)\n    })\n  }\n\n  /***\n   * PROPERTIES\n   ***/\n  setPersonPropertiesForFlags(properties: { [type: string]: string }): void {\n    this.wrap(() => {\n      // Get persisted person properties\n      const existingProperties =\n        this.getPersistedProperty<Record<string, string>>(PostHogPersistedProperty.PersonProperties) || {}\n\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.PersonProperties, {\n        ...existingProperties,\n        ...properties,\n      })\n    })\n  }\n\n  resetPersonPropertiesForFlags(): void {\n    this.wrap(() => {\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.PersonProperties, {})\n    })\n  }\n\n  /** @deprecated - Renamed to setPersonPropertiesForFlags */\n  personProperties(properties: { [type: string]: string }): void {\n    return this.setPersonPropertiesForFlags(properties)\n  }\n\n  setGroupPropertiesForFlags(properties: { [type: string]: Record<string, string> }): void {\n    this.wrap(() => {\n      // Get persisted group properties\n      const existingProperties =\n        this.getPersistedProperty<Record<string, Record<string, string>>>(PostHogPersistedProperty.GroupProperties) ||\n        {}\n\n      if (Object.keys(existingProperties).length !== 0) {\n        Object.keys(existingProperties).forEach((groupType) => {\n          existingProperties[groupType] = {\n            ...existingProperties[groupType],\n            ...properties[groupType],\n          }\n          delete properties[groupType]\n        })\n      }\n\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.GroupProperties, {\n        ...existingProperties,\n        ...properties,\n      })\n    })\n  }\n\n  resetGroupPropertiesForFlags(): void {\n    this.wrap(() => {\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.GroupProperties, {})\n    })\n  }\n\n  /** @deprecated - Renamed to setGroupPropertiesForFlags */\n  groupProperties(properties: { [type: string]: Record<string, string> }): void {\n    this.wrap(() => {\n      this.setGroupPropertiesForFlags(properties)\n    })\n  }\n\n  /***\n   *** FEATURE FLAGS\n   ***/\n  private async decideAsync(sendAnonDistinctId: boolean = true): Promise<PostHogDecideResponse | undefined> {\n    await this._initPromise\n    if (this._decideResponsePromise) {\n      return this._decideResponsePromise\n    }\n    return this._decideAsync(sendAnonDistinctId)\n  }\n\n  private async _decideAsync(sendAnonDistinctId: boolean = true): Promise<PostHogDecideResponse | undefined> {\n    this._decideResponsePromise = this._initPromise\n      .then(() => {\n        const distinctId = this.getDistinctId()\n        const groups = this.props.$groups || {}\n        const personProperties =\n          this.getPersistedProperty<Record<string, string>>(PostHogPersistedProperty.PersonProperties) || {}\n        const groupProperties =\n          this.getPersistedProperty<Record<string, Record<string, string>>>(PostHogPersistedProperty.GroupProperties) ||\n          {}\n\n        const extraProperties = {\n          $anon_distinct_id: sendAnonDistinctId ? this.getAnonymousId() : undefined,\n        }\n\n        return super.getDecide(distinctId, groups, personProperties, groupProperties, extraProperties).then((res) => {\n          if (res?.featureFlags) {\n            // clear flag call reported if we have new flags since they might have changed\n            if (this.sendFeatureFlagEvent) {\n              this.flagCallReported = {}\n            }\n\n            let newFeatureFlags = res.featureFlags\n            let newFeatureFlagPayloads = res.featureFlagPayloads\n            if (res.errorsWhileComputingFlags) {\n              // if not all flags were computed, we upsert flags instead of replacing them\n              const currentFlags = this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(\n                PostHogPersistedProperty.FeatureFlags\n              )\n\n              this.logMsgIfDebug(() =>\n                console.log('PostHog Debug', 'Cached feature flags: ', JSON.stringify(currentFlags))\n              )\n\n              const currentFlagPayloads = this.getPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n                PostHogPersistedProperty.FeatureFlagPayloads\n              )\n              newFeatureFlags = { ...currentFlags, ...res.featureFlags }\n              newFeatureFlagPayloads = { ...currentFlagPayloads, ...res.featureFlagPayloads }\n            }\n            this.setKnownFeatureFlags(newFeatureFlags)\n            this.setKnownFeatureFlagPayloads(\n              Object.fromEntries(\n                Object.entries(newFeatureFlagPayloads || {}).map(([k, v]) => [k, this._parsePayload(v)])\n              )\n            )\n            // Mark that we hit the /decide endpoint so we can capture this in the $feature_flag_called event\n            this.setPersistedProperty(PostHogPersistedProperty.DecideEndpointWasHit, true)\n\n            const sessionReplay = res?.sessionRecording\n            if (sessionReplay) {\n              this.setPersistedProperty(PostHogPersistedProperty.SessionReplay, sessionReplay)\n              this.logMsgIfDebug(() =>\n                console.log('PostHog Debug', 'Session replay config: ', JSON.stringify(sessionReplay))\n              )\n            } else {\n              this.logMsgIfDebug(() => console.info('PostHog Debug', 'Session replay config disabled.'))\n              this.setPersistedProperty(PostHogPersistedProperty.SessionReplay, null)\n            }\n          }\n\n          return res\n        })\n      })\n      .finally(() => {\n        this._decideResponsePromise = undefined\n      })\n    return this._decideResponsePromise\n  }\n\n  private setKnownFeatureFlags(featureFlags: PostHogDecideResponse['featureFlags']): void {\n    this.wrap(() => {\n      this.setPersistedProperty<PostHogDecideResponse['featureFlags']>(\n        PostHogPersistedProperty.FeatureFlags,\n        featureFlags\n      )\n      this._events.emit('featureflags', featureFlags)\n    })\n  }\n\n  private setKnownFeatureFlagPayloads(featureFlagPayloads: PostHogDecideResponse['featureFlagPayloads']): void {\n    this.wrap(() => {\n      this.setPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n        PostHogPersistedProperty.FeatureFlagPayloads,\n        featureFlagPayloads\n      )\n    })\n  }\n\n  getFeatureFlag(key: string): boolean | string | undefined {\n    const featureFlags = this.getFeatureFlags()\n\n    if (!featureFlags) {\n      // If we haven't loaded flags yet, or errored out, we respond with undefined\n      return undefined\n    }\n\n    let response = featureFlags[key]\n    // `/decide` v3 returns all flags\n\n    if (response === undefined) {\n      // For cases where the flag is unknown, return false\n      response = false\n    }\n\n    if (this.sendFeatureFlagEvent && !this.flagCallReported[key]) {\n      this.flagCallReported[key] = true\n      this.capture('$feature_flag_called', {\n        $feature_flag: key,\n        $feature_flag_response: response,\n        $feature_flag_bootstrapped_response: this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(\n          PostHogPersistedProperty.BootstrapFeatureFlags\n        )?.[key],\n        $feature_flag_bootstrapped_payload: this.getPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n          PostHogPersistedProperty.BootstrapFeatureFlagPayloads\n        )?.[key],\n        // If we haven't yet received a response from the /decide endpoint, we must have used the bootstrapped value\n        $used_bootstrap_value: !this.getPersistedProperty(PostHogPersistedProperty.DecideEndpointWasHit),\n      })\n    }\n\n    // If we have flags we either return the value (true or string) or false\n    return response\n  }\n\n  getFeatureFlagPayload(key: string): JsonType | undefined {\n    const payloads = this.getFeatureFlagPayloads()\n\n    if (!payloads) {\n      return undefined\n    }\n\n    const response = payloads[key]\n\n    // Undefined means a loading or missing data issue. Null means evaluation happened and there was no match\n    if (response === undefined) {\n      return null\n    }\n\n    return response\n  }\n\n  getFeatureFlagPayloads(): PostHogDecideResponse['featureFlagPayloads'] | undefined {\n    const payloads = this.getPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n      PostHogPersistedProperty.FeatureFlagPayloads\n    )\n\n    return payloads\n  }\n\n  getFeatureFlags(): PostHogDecideResponse['featureFlags'] | undefined {\n    // NOTE: We don't check for _initPromise here as the function is designed to be\n    // callable before the state being loaded anyways\n    let flags = this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(PostHogPersistedProperty.FeatureFlags)\n    const overriddenFlags = this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(\n      PostHogPersistedProperty.OverrideFeatureFlags\n    )\n\n    if (!overriddenFlags) {\n      return flags\n    }\n\n    flags = flags || {}\n\n    for (const key in overriddenFlags) {\n      if (!overriddenFlags[key]) {\n        delete flags[key]\n      } else {\n        flags[key] = overriddenFlags[key]\n      }\n    }\n\n    return flags\n  }\n\n  getFeatureFlagsAndPayloads(): {\n    flags: PostHogDecideResponse['featureFlags'] | undefined\n    payloads: PostHogDecideResponse['featureFlagPayloads'] | undefined\n  } {\n    const flags = this.getFeatureFlags()\n    const payloads = this.getFeatureFlagPayloads()\n\n    return {\n      flags,\n      payloads,\n    }\n  }\n\n  isFeatureEnabled(key: string): boolean | undefined {\n    const response = this.getFeatureFlag(key)\n    if (response === undefined) {\n      return undefined\n    }\n    return !!response\n  }\n\n  // Used when we want to trigger the reload but we don't care about the result\n  reloadFeatureFlags(cb?: (err?: Error, flags?: PostHogDecideResponse['featureFlags']) => void): void {\n    this.decideAsync()\n      .then((res) => {\n        cb?.(undefined, res?.featureFlags)\n      })\n      .catch((e) => {\n        cb?.(e, undefined)\n        if (!cb) {\n          this.logMsgIfDebug(() => console.log('[PostHog] Error reloading feature flags', e))\n        }\n      })\n  }\n\n  async reloadFeatureFlagsAsync(\n    sendAnonDistinctId: boolean = true\n  ): Promise<PostHogDecideResponse['featureFlags'] | undefined> {\n    return (await this.decideAsync(sendAnonDistinctId))?.featureFlags\n  }\n\n  onFeatureFlags(cb: (flags: PostHogDecideResponse['featureFlags']) => void): () => void {\n    return this.on('featureflags', async () => {\n      const flags = this.getFeatureFlags()\n      if (flags) {\n        cb(flags)\n      }\n    })\n  }\n\n  onFeatureFlag(key: string, cb: (value: string | boolean) => void): () => void {\n    return this.on('featureflags', async () => {\n      const flagResponse = this.getFeatureFlag(key)\n      if (flagResponse !== undefined) {\n        cb(flagResponse)\n      }\n    })\n  }\n\n  async overrideFeatureFlag(flags: PostHogDecideResponse['featureFlags'] | null): Promise<void> {\n    this.wrap(() => {\n      if (flags === null) {\n        return this.setPersistedProperty(PostHogPersistedProperty.OverrideFeatureFlags, null)\n      }\n      return this.setPersistedProperty(PostHogPersistedProperty.OverrideFeatureFlags, flags)\n    })\n  }\n\n  /***\n   *** ERROR TRACKING\n   ***/\n  captureException(error: Error, additionalProperties?: { [key: string]: any }): void {\n    const properties: { [key: string]: any } = {\n      $exception_level: 'error',\n      $exception_list: [\n        {\n          type: error.name,\n          value: error.message,\n          mechanism: {\n            handled: true,\n            synthetic: false,\n          },\n        },\n      ],\n      ...additionalProperties,\n    }\n\n    properties.$exception_personURL = new URL(\n      `/project/${this.apiKey}/person/${this.getDistinctId()}`,\n      this.host\n    ).toString()\n\n    this.capture('$exception', properties)\n  }\n\n  /**\n   * Capture written user feedback for a LLM trace. Numeric values are converted to strings.\n   * @param traceId The trace ID to capture feedback for.\n   * @param userFeedback The feedback to capture.\n   */\n  captureTraceFeedback(traceId: string | number, userFeedback: string): void {\n    this.capture('$ai_feedback', {\n      $ai_feedback_text: userFeedback,\n      $ai_trace_id: String(traceId),\n    })\n  }\n\n  /**\n   * Capture a metric for a LLM trace. Numeric values are converted to strings.\n   * @param traceId The trace ID to capture the metric for.\n   * @param metricName The name of the metric to capture.\n   * @param metricValue The value of the metric to capture.\n   */\n  captureTraceMetric(traceId: string | number, metricName: string, metricValue: string | number | boolean): void {\n    this.capture('$ai_metric', {\n      $ai_metric_name: metricName,\n      $ai_metric_value: String(metricValue),\n      $ai_trace_id: String(traceId),\n    })\n  }\n}\n\nexport * from './types'\nexport { LZString }\n","import { PostHogPersistedProperty } from './types'\n\nexport class PostHogMemoryStorage {\n  private _memoryStorage: { [key: string]: any | undefined } = {}\n\n  getProperty(key: PostHogPersistedProperty): any | undefined {\n    return this._memoryStorage[key]\n  }\n\n  setProperty(key: PostHogPersistedProperty, value: any | null): void {\n    this._memoryStorage[key] = value !== null ? value : undefined\n  }\n}\n","/**\n * Fetch wrapper\n *\n * We want to polyfill fetch when not available with axios but use it when it is.\n * NOTE: The current version of Axios has an issue when in non-node environments like Clouflare Workers.\n * This is currently solved by using the global fetch if available instead.\n * See https://github.com/PostHog/posthog-js-lite/issues/127 for more info\n */\n\nimport { FetchLike, PostHogFetchOptions, PostHogFetchResponse } from 'posthog-core/src'\nimport { getFetch } from 'posthog-core/src/utils'\n\nlet _fetch: FetchLike | undefined = getFetch()\n\nif (!_fetch) {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const axios = require('axios')\n\n  _fetch = async (url: string, options: PostHogFetchOptions): Promise<PostHogFetchResponse> => {\n    const res = await axios.request({\n      url,\n      headers: options.headers,\n      method: options.method.toLowerCase(),\n      data: options.body,\n      signal: options.signal,\n      // fetch only throws on network errors, not on HTTP errors\n      validateStatus: () => true,\n    })\n\n    return {\n      status: res.status,\n      text: async () => res.data,\n      json: async () => res.data,\n    }\n  }\n}\n\n// NOTE: We have to export this as default, even though we prefer named exports as we are relying on detecting \"fetch\" in the global scope\nexport default _fetch as FetchLike\n","import { createHash } from 'node:crypto'\nimport { FeatureFlagCondition, FlagProperty, PostHogFeatureFlag, PropertyGroup } from './types'\nimport { JsonType, PostHogFetchOptions, PostHogFetchResponse } from 'posthog-core/src'\nimport { safeSetTimeout } from 'posthog-core/src/utils'\nimport fetch from './fetch'\n\n// eslint-disable-next-line\nconst LONG_SCALE = 0xfffffffffffffff\n\nconst NULL_VALUES_ALLOWED_OPERATORS = ['is_not']\nclass ClientError extends Error {\n  constructor(message: string) {\n    super()\n    Error.captureStackTrace(this, this.constructor)\n    this.name = 'ClientError'\n    this.message = message\n    Object.setPrototypeOf(this, ClientError.prototype)\n  }\n}\n\nclass InconclusiveMatchError extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = this.constructor.name\n    Error.captureStackTrace(this, this.constructor)\n    // instanceof doesn't work in ES3 or ES5\n    // https://www.dannyguo.com/blog/how-to-fix-instanceof-not-working-for-custom-errors-in-typescript/\n    // this is the workaround\n    Object.setPrototypeOf(this, InconclusiveMatchError.prototype)\n  }\n}\n\ntype FeatureFlagsPollerOptions = {\n  personalApiKey: string\n  projectApiKey: string\n  host: string\n  pollingInterval: number\n  timeout?: number\n  fetch?: (url: string, options: PostHogFetchOptions) => Promise<PostHogFetchResponse>\n  onError?: (error: Error) => void\n  customHeaders?: { [key: string]: string }\n}\n\nclass FeatureFlagsPoller {\n  pollingInterval: number\n  personalApiKey: string\n  projectApiKey: string\n  featureFlags: Array<PostHogFeatureFlag>\n  featureFlagsByKey: Record<string, PostHogFeatureFlag>\n  groupTypeMapping: Record<string, string>\n  cohorts: Record<string, PropertyGroup>\n  loadedSuccessfullyOnce: boolean\n  timeout?: number\n  host: FeatureFlagsPollerOptions['host']\n  poller?: NodeJS.Timeout\n  fetch: (url: string, options: PostHogFetchOptions) => Promise<PostHogFetchResponse>\n  debugMode: boolean = false\n  onError?: (error: Error) => void\n  customHeaders?: { [key: string]: string }\n\n  constructor({\n    pollingInterval,\n    personalApiKey,\n    projectApiKey,\n    timeout,\n    host,\n    customHeaders,\n    ...options\n  }: FeatureFlagsPollerOptions) {\n    this.pollingInterval = pollingInterval\n    this.personalApiKey = personalApiKey\n    this.featureFlags = []\n    this.featureFlagsByKey = {}\n    this.groupTypeMapping = {}\n    this.cohorts = {}\n    this.loadedSuccessfullyOnce = false\n    this.timeout = timeout\n    this.projectApiKey = projectApiKey\n    this.host = host\n    this.poller = undefined\n    // NOTE: as any is required here as the AbortSignal typing is slightly misaligned but works just fine\n    this.fetch = options.fetch || fetch\n    this.onError = options.onError\n    this.customHeaders = customHeaders\n\n    void this.loadFeatureFlags()\n  }\n\n  debug(enabled: boolean = true): void {\n    this.debugMode = enabled\n  }\n\n  private logMsgIfDebug(fn: () => void): void {\n    if (this.debugMode) {\n      fn()\n    }\n  }\n\n  async getFeatureFlag(\n    key: string,\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {}\n  ): Promise<string | boolean | undefined> {\n    await this.loadFeatureFlags()\n\n    let response: string | boolean | undefined = undefined\n    let featureFlag = undefined\n\n    if (!this.loadedSuccessfullyOnce) {\n      return response\n    }\n\n    for (const flag of this.featureFlags) {\n      if (key === flag.key) {\n        featureFlag = flag\n        break\n      }\n    }\n\n    if (featureFlag !== undefined) {\n      try {\n        response = this.computeFlagLocally(featureFlag, distinctId, groups, personProperties, groupProperties)\n        this.logMsgIfDebug(() => console.debug(`Successfully computed flag locally: ${key} -> ${response}`))\n      } catch (e) {\n        if (e instanceof InconclusiveMatchError) {\n          this.logMsgIfDebug(() => console.debug(`InconclusiveMatchError when computing flag locally: ${key}: ${e}`))\n        } else if (e instanceof Error) {\n          this.onError?.(new Error(`Error computing flag locally: ${key}: ${e}`))\n        }\n      }\n    }\n\n    return response\n  }\n\n  async computeFeatureFlagPayloadLocally(key: string, matchValue: string | boolean): Promise<JsonType | undefined> {\n    await this.loadFeatureFlags()\n\n    let response = undefined\n\n    if (!this.loadedSuccessfullyOnce) {\n      return undefined\n    }\n\n    if (typeof matchValue == 'boolean') {\n      response = this.featureFlagsByKey?.[key]?.filters?.payloads?.[matchValue.toString()]\n    } else if (typeof matchValue == 'string') {\n      response = this.featureFlagsByKey?.[key]?.filters?.payloads?.[matchValue]\n    }\n\n    // Undefined means a loading or missing data issue. Null means evaluation happened and there was no match\n    if (response === undefined || response === null) {\n      return null\n    }\n\n    try {\n      return JSON.parse(response)\n    } catch {\n      return response\n    }\n  }\n\n  async getAllFlagsAndPayloads(\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {}\n  ): Promise<{\n    response: Record<string, string | boolean>\n    payloads: Record<string, JsonType>\n    fallbackToDecide: boolean\n  }> {\n    await this.loadFeatureFlags()\n\n    const response: Record<string, string | boolean> = {}\n    const payloads: Record<string, JsonType> = {}\n    let fallbackToDecide = this.featureFlags.length == 0\n\n    this.featureFlags.map(async (flag) => {\n      try {\n        const matchValue = this.computeFlagLocally(flag, distinctId, groups, personProperties, groupProperties)\n        response[flag.key] = matchValue\n        const matchPayload = await this.computeFeatureFlagPayloadLocally(flag.key, matchValue)\n        if (matchPayload) {\n          payloads[flag.key] = matchPayload\n        }\n      } catch (e) {\n        if (e instanceof InconclusiveMatchError) {\n          // do nothing\n        } else if (e instanceof Error) {\n          this.onError?.(new Error(`Error computing flag locally: ${flag.key}: ${e}`))\n        }\n        fallbackToDecide = true\n      }\n    })\n\n    return { response, payloads, fallbackToDecide }\n  }\n\n  computeFlagLocally(\n    flag: PostHogFeatureFlag,\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {}\n  ): string | boolean {\n    if (flag.ensure_experience_continuity) {\n      throw new InconclusiveMatchError('Flag has experience continuity enabled')\n    }\n\n    if (!flag.active) {\n      return false\n    }\n\n    const flagFilters = flag.filters || {}\n    const aggregation_group_type_index = flagFilters.aggregation_group_type_index\n\n    if (aggregation_group_type_index != undefined) {\n      const groupName = this.groupTypeMapping[String(aggregation_group_type_index)]\n\n      if (!groupName) {\n        this.logMsgIfDebug(() =>\n          console.warn(\n            `[FEATURE FLAGS] Unknown group type index ${aggregation_group_type_index} for feature flag ${flag.key}`\n          )\n        )\n        throw new InconclusiveMatchError('Flag has unknown group type index')\n      }\n\n      if (!(groupName in groups)) {\n        this.logMsgIfDebug(() =>\n          console.warn(`[FEATURE FLAGS] Can't compute group feature flag: ${flag.key} without group names passed in`)\n        )\n        return false\n      }\n\n      const focusedGroupProperties = groupProperties[groupName]\n      return this.matchFeatureFlagProperties(flag, groups[groupName], focusedGroupProperties)\n    } else {\n      return this.matchFeatureFlagProperties(flag, distinctId, personProperties)\n    }\n  }\n\n  matchFeatureFlagProperties(\n    flag: PostHogFeatureFlag,\n    distinctId: string,\n    properties: Record<string, string>\n  ): string | boolean {\n    const flagFilters = flag.filters || {}\n    const flagConditions = flagFilters.groups || []\n    let isInconclusive = false\n    let result = undefined\n\n    // # Stable sort conditions with variant overrides to the top. This ensures that if overrides are present, they are\n    // # evaluated first, and the variant override is applied to the first matching condition.\n    const sortedFlagConditions = [...flagConditions].sort((conditionA, conditionB) => {\n      const AHasVariantOverride = !!conditionA.variant\n      const BHasVariantOverride = !!conditionB.variant\n\n      if (AHasVariantOverride && BHasVariantOverride) {\n        return 0\n      } else if (AHasVariantOverride) {\n        return -1\n      } else if (BHasVariantOverride) {\n        return 1\n      } else {\n        return 0\n      }\n    })\n\n    for (const condition of sortedFlagConditions) {\n      try {\n        if (this.isConditionMatch(flag, distinctId, condition, properties)) {\n          const variantOverride = condition.variant\n          const flagVariants = flagFilters.multivariate?.variants || []\n          if (variantOverride && flagVariants.some((variant) => variant.key === variantOverride)) {\n            result = variantOverride\n          } else {\n            result = this.getMatchingVariant(flag, distinctId) || true\n          }\n          break\n        }\n      } catch (e) {\n        if (e instanceof InconclusiveMatchError) {\n          isInconclusive = true\n        } else {\n          throw e\n        }\n      }\n    }\n\n    if (result !== undefined) {\n      return result\n    } else if (isInconclusive) {\n      throw new InconclusiveMatchError(\"Can't determine if feature flag is enabled or not with given properties\")\n    }\n\n    // We can only return False when all conditions are False\n    return false\n  }\n\n  isConditionMatch(\n    flag: PostHogFeatureFlag,\n    distinctId: string,\n    condition: FeatureFlagCondition,\n    properties: Record<string, string>\n  ): boolean {\n    const rolloutPercentage = condition.rollout_percentage\n    const warnFunction = (msg: string): void => {\n      this.logMsgIfDebug(() => console.warn(msg))\n    }\n    if ((condition.properties || []).length > 0) {\n      for (const prop of condition.properties) {\n        const propertyType = prop.type\n        let matches = false\n\n        if (propertyType === 'cohort') {\n          matches = matchCohort(prop, properties, this.cohorts, this.debugMode)\n        } else {\n          matches = matchProperty(prop, properties, warnFunction)\n        }\n\n        if (!matches) {\n          return false\n        }\n      }\n\n      if (rolloutPercentage == undefined) {\n        return true\n      }\n    }\n\n    if (rolloutPercentage != undefined && _hash(flag.key, distinctId) > rolloutPercentage / 100.0) {\n      return false\n    }\n\n    return true\n  }\n\n  getMatchingVariant(flag: PostHogFeatureFlag, distinctId: string): string | boolean | undefined {\n    const hashValue = _hash(flag.key, distinctId, 'variant')\n    const matchingVariant = this.variantLookupTable(flag).find((variant) => {\n      return hashValue >= variant.valueMin && hashValue < variant.valueMax\n    })\n\n    if (matchingVariant) {\n      return matchingVariant.key\n    }\n    return undefined\n  }\n\n  variantLookupTable(flag: PostHogFeatureFlag): { valueMin: number; valueMax: number; key: string }[] {\n    const lookupTable: { valueMin: number; valueMax: number; key: string }[] = []\n    let valueMin = 0\n    let valueMax = 0\n    const flagFilters = flag.filters || {}\n    const multivariates: {\n      key: string\n      rollout_percentage: number\n    }[] = flagFilters.multivariate?.variants || []\n\n    multivariates.forEach((variant) => {\n      valueMax = valueMin + variant.rollout_percentage / 100.0\n      lookupTable.push({ valueMin, valueMax, key: variant.key })\n      valueMin = valueMax\n    })\n    return lookupTable\n  }\n\n  async loadFeatureFlags(forceReload = false): Promise<void> {\n    if (!this.loadedSuccessfullyOnce || forceReload) {\n      await this._loadFeatureFlags()\n    }\n  }\n\n  async _loadFeatureFlags(): Promise<void> {\n    if (this.poller) {\n      clearTimeout(this.poller)\n      this.poller = undefined\n    }\n    this.poller = setTimeout(() => this._loadFeatureFlags(), this.pollingInterval)\n\n    try {\n      const res = await this._requestFeatureFlagDefinitions()\n\n      if (res && res.status === 401) {\n        throw new ClientError(\n          `Your personalApiKey is invalid. Are you sure you're not using your Project API key? More information: https://posthog.com/docs/api/overview`\n        )\n      }\n\n      if (res && res.status !== 200) {\n        // something else went wrong, or the server is down.\n        // In this case, don't override existing flags\n        return\n      }\n\n      const responseJson = await res.json()\n      if (!('flags' in responseJson)) {\n        this.onError?.(new Error(`Invalid response when getting feature flags: ${JSON.stringify(responseJson)}`))\n      }\n\n      this.featureFlags = responseJson.flags || []\n      this.featureFlagsByKey = this.featureFlags.reduce(\n        (acc, curr) => ((acc[curr.key] = curr), acc),\n        <Record<string, PostHogFeatureFlag>>{}\n      )\n      this.groupTypeMapping = responseJson.group_type_mapping || {}\n      this.cohorts = responseJson.cohorts || []\n      this.loadedSuccessfullyOnce = true\n    } catch (err) {\n      // if an error that is not an instance of ClientError is thrown\n      // we silently ignore the error when reloading feature flags\n      if (err instanceof ClientError) {\n        this.onError?.(err)\n      }\n    }\n  }\n\n  private getPersonalApiKeyRequestOptions(method: 'GET' | 'POST' | 'PUT' | 'PATCH' = 'GET'): PostHogFetchOptions {\n    return {\n      method,\n      headers: {\n        ...this.customHeaders,\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.personalApiKey}`,\n      },\n    }\n  }\n\n  async _requestFeatureFlagDefinitions(): Promise<PostHogFetchResponse> {\n    const url = `${this.host}/api/feature_flag/local_evaluation?token=${this.projectApiKey}&send_cohorts`\n\n    const options = this.getPersonalApiKeyRequestOptions()\n\n    let abortTimeout = null\n\n    if (this.timeout && typeof this.timeout === 'number') {\n      const controller = new AbortController()\n      abortTimeout = safeSetTimeout(() => {\n        controller.abort()\n      }, this.timeout)\n      options.signal = controller.signal\n    }\n\n    try {\n      return await this.fetch(url, options)\n    } finally {\n      clearTimeout(abortTimeout)\n    }\n  }\n\n  stopPoller(): void {\n    clearTimeout(this.poller)\n  }\n\n  _requestRemoteConfigPayload(flagKey: string): Promise<PostHogFetchResponse> {\n    const url = `${this.host}/api/projects/@current/feature_flags/${flagKey}/remote_config/`\n\n    const options = this.getPersonalApiKeyRequestOptions()\n\n    let abortTimeout = null\n    if (this.timeout && typeof this.timeout === 'number') {\n      const controller = new AbortController()\n      abortTimeout = safeSetTimeout(() => {\n        controller.abort()\n      }, this.timeout)\n      options.signal = controller.signal\n    }\n    try {\n      return this.fetch(url, options)\n    } finally {\n      clearTimeout(abortTimeout)\n    }\n  }\n}\n\n// # This function takes a distinct_id and a feature flag key and returns a float between 0 and 1.\n// # Given the same distinct_id and key, it'll always return the same float. These floats are\n// # uniformly distributed between 0 and 1, so if we want to show this feature to 20% of traffic\n// # we can do _hash(key, distinct_id) < 0.2\nfunction _hash(key: string, distinctId: string, salt: string = ''): number {\n  const sha1Hash = createHash('sha1')\n  sha1Hash.update(`${key}.${distinctId}${salt}`)\n  return parseInt(sha1Hash.digest('hex').slice(0, 15), 16) / LONG_SCALE\n}\n\nfunction matchProperty(\n  property: FeatureFlagCondition['properties'][number],\n  propertyValues: Record<string, any>,\n  warnFunction?: (msg: string) => void\n): boolean {\n  const key = property.key\n  const value = property.value\n  const operator = property.operator || 'exact'\n\n  if (!(key in propertyValues)) {\n    throw new InconclusiveMatchError(`Property ${key} not found in propertyValues`)\n  } else if (operator === 'is_not_set') {\n    throw new InconclusiveMatchError(`Operator is_not_set is not supported`)\n  }\n\n  const overrideValue = propertyValues[key]\n  if (overrideValue == null && !NULL_VALUES_ALLOWED_OPERATORS.includes(operator)) {\n    // if the value is null, just fail the feature flag comparison\n    // this isn't an InconclusiveMatchError because the property value was provided.\n    if (warnFunction) {\n      warnFunction(`Property ${key} cannot have a value of null/undefined with the ${operator} operator`)\n    }\n\n    return false\n  }\n\n  function computeExactMatch(value: any, overrideValue: any): boolean {\n    if (Array.isArray(value)) {\n      return value.map((val) => String(val).toLowerCase()).includes(String(overrideValue).toLowerCase())\n    }\n    return String(value).toLowerCase() === String(overrideValue).toLowerCase()\n  }\n\n  function compare(lhs: any, rhs: any, operator: string): boolean {\n    if (operator === 'gt') {\n      return lhs > rhs\n    } else if (operator === 'gte') {\n      return lhs >= rhs\n    } else if (operator === 'lt') {\n      return lhs < rhs\n    } else if (operator === 'lte') {\n      return lhs <= rhs\n    } else {\n      throw new Error(`Invalid operator: ${operator}`)\n    }\n  }\n\n  switch (operator) {\n    case 'exact':\n      return computeExactMatch(value, overrideValue)\n    case 'is_not':\n      return !computeExactMatch(value, overrideValue)\n    case 'is_set':\n      return key in propertyValues\n    case 'icontains':\n      return String(overrideValue).toLowerCase().includes(String(value).toLowerCase())\n    case 'not_icontains':\n      return !String(overrideValue).toLowerCase().includes(String(value).toLowerCase())\n    case 'regex':\n      return isValidRegex(String(value)) && String(overrideValue).match(String(value)) !== null\n    case 'not_regex':\n      return isValidRegex(String(value)) && String(overrideValue).match(String(value)) === null\n    case 'gt':\n    case 'gte':\n    case 'lt':\n    case 'lte': {\n      // :TRICKY: We adjust comparison based on the override value passed in,\n      // to make sure we handle both numeric and string comparisons appropriately.\n      let parsedValue = typeof value === 'number' ? value : null\n\n      if (typeof value === 'string') {\n        try {\n          parsedValue = parseFloat(value)\n        } catch (err) {\n          // pass\n        }\n      }\n\n      if (parsedValue != null && overrideValue != null) {\n        // check both null and undefined\n        if (typeof overrideValue === 'string') {\n          return compare(overrideValue, String(value), operator)\n        } else {\n          return compare(overrideValue, parsedValue, operator)\n        }\n      } else {\n        return compare(String(overrideValue), String(value), operator)\n      }\n    }\n    case 'is_date_after':\n    case 'is_date_before': {\n      let parsedDate = relativeDateParseForFeatureFlagMatching(String(value))\n      if (parsedDate == null) {\n        parsedDate = convertToDateTime(value)\n      }\n\n      if (parsedDate == null) {\n        throw new InconclusiveMatchError(`Invalid date: ${value}`)\n      }\n      const overrideDate = convertToDateTime(overrideValue)\n      if (['is_date_before'].includes(operator)) {\n        return overrideDate < parsedDate\n      }\n      return overrideDate > parsedDate\n    }\n    default:\n      throw new InconclusiveMatchError(`Unknown operator: ${operator}`)\n  }\n}\n\nfunction matchCohort(\n  property: FeatureFlagCondition['properties'][number],\n  propertyValues: Record<string, any>,\n  cohortProperties: FeatureFlagsPoller['cohorts'],\n  debugMode: boolean = false\n): boolean {\n  const cohortId = String(property.value)\n  if (!(cohortId in cohortProperties)) {\n    throw new InconclusiveMatchError(\"can't match cohort without a given cohort property value\")\n  }\n\n  const propertyGroup = cohortProperties[cohortId]\n  return matchPropertyGroup(propertyGroup, propertyValues, cohortProperties, debugMode)\n}\n\nfunction matchPropertyGroup(\n  propertyGroup: PropertyGroup,\n  propertyValues: Record<string, any>,\n  cohortProperties: FeatureFlagsPoller['cohorts'],\n  debugMode: boolean = false\n): boolean {\n  if (!propertyGroup) {\n    return true\n  }\n\n  const propertyGroupType = propertyGroup.type\n  const properties = propertyGroup.values\n\n  if (!properties || properties.length === 0) {\n    // empty groups are no-ops, always match\n    return true\n  }\n\n  let errorMatchingLocally = false\n\n  if ('values' in properties[0]) {\n    // a nested property group\n    for (const prop of properties as PropertyGroup[]) {\n      try {\n        const matches = matchPropertyGroup(prop, propertyValues, cohortProperties, debugMode)\n        if (propertyGroupType === 'AND') {\n          if (!matches) {\n            return false\n          }\n        } else {\n          // OR group\n          if (matches) {\n            return true\n          }\n        }\n      } catch (err) {\n        if (err instanceof InconclusiveMatchError) {\n          if (debugMode) {\n            console.debug(`Failed to compute property ${prop} locally: ${err}`)\n          }\n          errorMatchingLocally = true\n        } else {\n          throw err\n        }\n      }\n    }\n\n    if (errorMatchingLocally) {\n      throw new InconclusiveMatchError(\"Can't match cohort without a given cohort property value\")\n    }\n    // if we get here, all matched in AND case, or none matched in OR case\n    return propertyGroupType === 'AND'\n  } else {\n    for (const prop of properties as FlagProperty[]) {\n      try {\n        let matches: boolean\n        if (prop.type === 'cohort') {\n          matches = matchCohort(prop, propertyValues, cohortProperties, debugMode)\n        } else {\n          matches = matchProperty(prop, propertyValues)\n        }\n\n        const negation = prop.negation || false\n\n        if (propertyGroupType === 'AND') {\n          // if negated property, do the inverse\n          if (!matches && !negation) {\n            return false\n          }\n          if (matches && negation) {\n            return false\n          }\n        } else {\n          // OR group\n          if (matches && !negation) {\n            return true\n          }\n          if (!matches && negation) {\n            return true\n          }\n        }\n      } catch (err) {\n        if (err instanceof InconclusiveMatchError) {\n          if (debugMode) {\n            console.debug(`Failed to compute property ${prop} locally: ${err}`)\n          }\n          errorMatchingLocally = true\n        } else {\n          throw err\n        }\n      }\n    }\n\n    if (errorMatchingLocally) {\n      throw new InconclusiveMatchError(\"can't match cohort without a given cohort property value\")\n    }\n\n    // if we get here, all matched in AND case, or none matched in OR case\n    return propertyGroupType === 'AND'\n  }\n}\n\nfunction isValidRegex(regex: string): boolean {\n  try {\n    new RegExp(regex)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n\nfunction convertToDateTime(value: string | number | (string | number)[] | Date): Date {\n  if (value instanceof Date) {\n    return value\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    const date = new Date(value)\n    if (!isNaN(date.valueOf())) {\n      return date\n    }\n    throw new InconclusiveMatchError(`${value} is in an invalid date format`)\n  } else {\n    throw new InconclusiveMatchError(`The date provided ${value} must be a string, number, or date object`)\n  }\n}\n\nfunction relativeDateParseForFeatureFlagMatching(value: string): Date | null {\n  const regex = /^-?(?<number>[0-9]+)(?<interval>[a-z])$/\n  const match = value.match(regex)\n  const parsedDt = new Date(new Date().toISOString())\n\n  if (match) {\n    if (!match.groups) {\n      return null\n    }\n\n    const number = parseInt(match.groups['number'])\n\n    if (number >= 10000) {\n      // Guard against overflow, disallow numbers greater than 10_000\n      return null\n    }\n    const interval = match.groups['interval']\n    if (interval == 'h') {\n      parsedDt.setUTCHours(parsedDt.getUTCHours() - number)\n    } else if (interval == 'd') {\n      parsedDt.setUTCDate(parsedDt.getUTCDate() - number)\n    } else if (interval == 'w') {\n      parsedDt.setUTCDate(parsedDt.getUTCDate() - number * 7)\n    } else if (interval == 'm') {\n      parsedDt.setUTCMonth(parsedDt.getUTCMonth() - number)\n    } else if (interval == 'y') {\n      parsedDt.setUTCFullYear(parsedDt.getUTCFullYear() - number)\n    } else {\n      return null\n    }\n\n    return parsedDt\n  } else {\n    return null\n  }\n}\n\nexport {\n  FeatureFlagsPoller,\n  matchProperty,\n  relativeDateParseForFeatureFlagMatching,\n  InconclusiveMatchError,\n  ClientError,\n}\n","import { EventHint } from 'posthog-node/src/extensions/error-tracking/types'\n\ntype ErrorHandler = { _posthogErrorHandler: boolean } & ((error: Error) => void)\n\nfunction makeUncaughtExceptionHandler(\n  captureFn: (exception: Error, hint: EventHint) => void,\n  onFatalFn: () => void\n): ErrorHandler {\n  let calledFatalError: boolean = false\n\n  return Object.assign(\n    (error: Error): void => {\n      // Attaching a listener to `uncaughtException` will prevent the node process from exiting. We generally do not\n      // want to alter this behaviour so we check for other listeners that users may have attached themselves and adjust\n      // exit behaviour of the SDK accordingly:\n      // - If other listeners are attached, do not exit.\n      // - If the only listener attached is ours, exit.\n      const userProvidedListenersCount = global.process.listeners('uncaughtException').filter((listener) => {\n        // There are 2 listeners we ignore:\n        return (\n          // as soon as we're using domains this listener is attached by node itself\n          listener.name !== 'domainUncaughtExceptionClear' &&\n          // the handler we register in this integration\n          (listener as ErrorHandler)._posthogErrorHandler !== true\n        )\n      }).length\n\n      const processWouldExit = userProvidedListenersCount === 0\n\n      captureFn(error, {\n        mechanism: {\n          type: 'onuncaughtexception',\n          handled: false,\n        },\n      })\n\n      if (!calledFatalError && processWouldExit) {\n        calledFatalError = true\n        onFatalFn()\n      }\n    },\n    { _posthogErrorHandler: true }\n  )\n}\n\nexport function addUncaughtExceptionListener(\n  captureFn: (exception: Error, hint: EventHint) => void,\n  onFatalFn: () => void\n): void {\n  global.process.on('uncaughtException', makeUncaughtExceptionHandler(captureFn, onFatalFn))\n}\n\nexport function addUnhandledRejectionListener(captureFn: (exception: unknown, hint: EventHint) => void): void {\n  global.process.on('unhandledRejection', (reason: unknown) => {\n    captureFn(reason, {\n      mechanism: {\n        type: 'onunhandledrejection',\n        handled: false,\n      },\n    })\n  })\n}\n","import { PolymorphicEvent } from './types'\n\nexport function isEvent(candidate: unknown): candidate is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(candidate, Event)\n}\n\nexport function isPlainObject(candidate: unknown): candidate is Record<string, unknown> {\n  return isBuiltin(candidate, 'Object')\n}\n\nexport function isError(candidate: unknown): candidate is Error {\n  switch (Object.prototype.toString.call(candidate)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n    case '[object WebAssembly.Exception]':\n      return true\n    default:\n      return isInstanceOf(candidate, Error)\n  }\n}\n\nexport function isInstanceOf(candidate: unknown, base: any): boolean {\n  try {\n    return candidate instanceof base\n  } catch {\n    return false\n  }\n}\n\nexport function isErrorEvent(event: unknown): boolean {\n  return isBuiltin(event, 'ErrorEvent')\n}\n\nexport function isBuiltin(candidate: unknown, className: string): boolean {\n  return Object.prototype.toString.call(candidate) === `[object ${className}]`\n}\n","/** A simple Least Recently Used map */\nexport class ReduceableCache<K, V> {\n  private readonly _cache: Map<K, V>\n\n  public constructor(private readonly _maxSize: number) {\n    this._cache = new Map<K, V>()\n  }\n\n  /** Get an entry or undefined if it was not in the cache. Re-inserts to update the recently used order */\n  public get(key: K): V | undefined {\n    const value = this._cache.get(key)\n    if (value === undefined) {\n      return undefined\n    }\n    // Remove and re-insert to update the order\n    this._cache.delete(key)\n    this._cache.set(key, value)\n    return value\n  }\n\n  /** Insert an entry and evict an older entry if we've reached maxSize */\n  public set(key: K, value: V): void {\n    this._cache.set(key, value)\n  }\n\n  /** Remove an entry and return the entry if it was in the cache */\n  public reduce(): void {\n    while (this._cache.size >= this._maxSize) {\n      const value = this._cache.keys().next().value\n      if (value) {\n        // keys() returns an iterator in insertion order so keys().next() gives us the oldest key\n        this._cache.delete(value)\n      }\n    }\n  }\n}\n","import { createReadStream } from 'node:fs'\nimport { createInterface } from 'node:readline'\nimport { StackFrame } from './types'\nimport { ReduceableCache } from './reduceable-cache'\n\nconst LRU_FILE_CONTENTS_CACHE = new ReduceableCache<string, Record<number, string>>(25)\nconst LRU_FILE_CONTENTS_FS_READ_FAILED = new ReduceableCache<string, 1>(20)\nconst DEFAULT_LINES_OF_CONTEXT = 7\n// Determines the upper bound of lineno/colno that we will attempt to read. Large colno values are likely to be\n// minified code while large lineno values are likely to be bundled code.\n// Exported for testing purposes.\nexport const MAX_CONTEXTLINES_COLNO: number = 1000\nexport const MAX_CONTEXTLINES_LINENO: number = 10000\n\ntype ReadlineRange = [start: number, end: number]\n\nexport async function addSourceContext(frames: StackFrame[]): Promise<StackFrame[]> {\n  // keep a lookup map of which files we've already enqueued to read,\n  // so we don't enqueue the same file multiple times which would cause multiple i/o reads\n  const filesToLines: Record<string, number[]> = {}\n\n  // Maps preserve insertion order, so we iterate in reverse, starting at the\n  // outermost frame and closer to where the exception has occurred (poor mans priority)\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame: StackFrame | undefined = frames[i]\n    const filename = frame?.filename\n\n    if (\n      !frame ||\n      typeof filename !== 'string' ||\n      typeof frame.lineno !== 'number' ||\n      shouldSkipContextLinesForFile(filename) ||\n      shouldSkipContextLinesForFrame(frame)\n    ) {\n      continue\n    }\n\n    const filesToLinesOutput = filesToLines[filename]\n    if (!filesToLinesOutput) {\n      filesToLines[filename] = []\n    }\n    filesToLines[filename].push(frame.lineno)\n  }\n\n  const files = Object.keys(filesToLines)\n  if (files.length == 0) {\n    return frames\n  }\n\n  const readlinePromises: Promise<void>[] = []\n  for (const file of files) {\n    // If we failed to read this before, dont try reading it again.\n    if (LRU_FILE_CONTENTS_FS_READ_FAILED.get(file)) {\n      continue\n    }\n\n    const filesToLineRanges = filesToLines[file]\n    if (!filesToLineRanges) {\n      continue\n    }\n\n    // Sort ranges so that they are sorted by line increasing order and match how the file is read.\n    filesToLineRanges.sort((a, b) => a - b)\n    // Check if the contents are already in the cache and if we can avoid reading the file again.\n    const ranges = makeLineReaderRanges(filesToLineRanges)\n    if (ranges.every((r) => rangeExistsInContentCache(file, r))) {\n      continue\n    }\n\n    const cache = emplace(LRU_FILE_CONTENTS_CACHE, file, {})\n    readlinePromises.push(getContextLinesFromFile(file, ranges, cache))\n  }\n\n  // The promise rejections are caught in order to prevent them from short circuiting Promise.all\n  await Promise.all(readlinePromises).catch(() => {})\n\n  // Perform the same loop as above, but this time we can assume all files are in the cache\n  // and attempt to add source context to frames.\n  if (frames && frames.length > 0) {\n    addSourceContextToFrames(frames, LRU_FILE_CONTENTS_CACHE)\n  }\n\n  // Once we're finished processing an exception reduce the files held in the cache\n  // so that we don't indefinetly increase the size of this map\n  LRU_FILE_CONTENTS_CACHE.reduce()\n\n  return frames\n}\n\n/**\n * Extracts lines from a file and stores them in a cache.\n */\nfunction getContextLinesFromFile(path: string, ranges: ReadlineRange[], output: Record<number, string>): Promise<void> {\n  return new Promise((resolve) => {\n    // It is important *not* to have any async code between createInterface and the 'line' event listener\n    // as it will cause the 'line' event to\n    // be emitted before the listener is attached.\n    const stream = createReadStream(path)\n    const lineReaded = createInterface({\n      input: stream,\n    })\n\n    // We need to explicitly destroy the stream to prevent memory leaks,\n    // removing the listeners on the readline interface is not enough.\n    // See: https://github.com/nodejs/node/issues/9002 and https://github.com/getsentry/sentry-javascript/issues/14892\n    function destroyStreamAndResolve(): void {\n      stream.destroy()\n      resolve()\n    }\n\n    // Init at zero and increment at the start of the loop because lines are 1 indexed.\n    let lineNumber = 0\n    let currentRangeIndex = 0\n    const range = ranges[currentRangeIndex]\n    if (range === undefined) {\n      // We should never reach this point, but if we do, we should resolve the promise to prevent it from hanging.\n      destroyStreamAndResolve()\n      return\n    }\n    let rangeStart = range[0]\n    let rangeEnd = range[1]\n\n    // We use this inside Promise.all, so we need to resolve the promise even if there is an error\n    // to prevent Promise.all from short circuiting the rest.\n    function onStreamError(): void {\n      // Mark file path as failed to read and prevent multiple read attempts.\n      LRU_FILE_CONTENTS_FS_READ_FAILED.set(path, 1)\n      lineReaded.close()\n      lineReaded.removeAllListeners()\n      destroyStreamAndResolve()\n    }\n\n    // We need to handle the error event to prevent the process from crashing in < Node 16\n    // https://github.com/nodejs/node/pull/31603\n    stream.on('error', onStreamError)\n    lineReaded.on('error', onStreamError)\n    lineReaded.on('close', destroyStreamAndResolve)\n\n    lineReaded.on('line', (line) => {\n      lineNumber++\n      if (lineNumber < rangeStart) {\n        return\n      }\n\n      // !Warning: This mutates the cache by storing the snipped line into the cache.\n      output[lineNumber] = snipLine(line, 0)\n\n      if (lineNumber >= rangeEnd) {\n        if (currentRangeIndex === ranges.length - 1) {\n          // We need to close the file stream and remove listeners, else the reader will continue to run our listener;\n          lineReaded.close()\n          lineReaded.removeAllListeners()\n          return\n        }\n        currentRangeIndex++\n        const range = ranges[currentRangeIndex]\n        if (range === undefined) {\n          // This should never happen as it means we have a bug in the context.\n          lineReaded.close()\n          lineReaded.removeAllListeners()\n          return\n        }\n        rangeStart = range[0]\n        rangeEnd = range[1]\n      }\n    })\n  })\n}\n\n/** Adds context lines to frames */\nfunction addSourceContextToFrames(frames: StackFrame[], cache: ReduceableCache<string, Record<number, string>>): void {\n  for (const frame of frames) {\n    // Only add context if we have a filename and it hasn't already been added\n    if (frame.filename && frame.context_line === undefined && typeof frame.lineno === 'number') {\n      const contents = cache.get(frame.filename)\n      if (contents === undefined) {\n        continue\n      }\n\n      addContextToFrame(frame.lineno, frame, contents)\n    }\n  }\n}\n\n/**\n * Resolves context lines before and after the given line number and appends them to the frame;\n */\nfunction addContextToFrame(lineno: number, frame: StackFrame, contents: Record<number, string> | undefined): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping.\n  // We already check for lineno before calling this, but since StackFrame lineno is optional, we check it again.\n  if (frame.lineno === undefined || contents === undefined) {\n    return\n  }\n\n  frame.pre_context = []\n  for (let i = makeRangeStart(lineno); i < lineno; i++) {\n    // We always expect the start context as line numbers cannot be negative. If we dont find a line, then\n    // something went wrong somewhere. Clear the context and return without adding any linecontext.\n    const line = contents[i]\n    if (line === undefined) {\n      clearLineContext(frame)\n      return\n    }\n\n    frame.pre_context.push(line)\n  }\n\n  // We should always have the context line. If we dont, something went wrong, so we clear the context and return\n  // without adding any linecontext.\n  if (contents[lineno] === undefined) {\n    clearLineContext(frame)\n    return\n  }\n\n  frame.context_line = contents[lineno]\n\n  const end = makeRangeEnd(lineno)\n  frame.post_context = []\n  for (let i = lineno + 1; i <= end; i++) {\n    // Since we dont track when the file ends, we cant clear the context if we dont find a line as it could\n    // just be that we reached the end of the file.\n    const line = contents[i]\n    if (line === undefined) {\n      break\n    }\n    frame.post_context.push(line)\n  }\n}\n\n/**\n * Clears the context lines from a frame, used to reset a frame to its original state\n * if we fail to resolve all context lines for it.\n */\nfunction clearLineContext(frame: StackFrame): void {\n  delete frame.pre_context\n  delete frame.context_line\n  delete frame.post_context\n}\n\n/**\n * Determines if context lines should be skipped for a file.\n * - .min.(mjs|cjs|js) files are and not useful since they dont point to the original source\n * - node: prefixed modules are part of the runtime and cannot be resolved to a file\n * - data: skip json, wasm and inline js https://nodejs.org/api/esm.html#data-imports\n */\nfunction shouldSkipContextLinesForFile(path: string): boolean {\n  // Test the most common prefix and extension first. These are the ones we\n  // are most likely to see in user applications and are the ones we can break out of first.\n  return (\n    path.startsWith('node:') ||\n    path.endsWith('.min.js') ||\n    path.endsWith('.min.cjs') ||\n    path.endsWith('.min.mjs') ||\n    path.startsWith('data:')\n  )\n}\n\n/**\n * Determines if we should skip contextlines based off the max lineno and colno values.\n */\nfunction shouldSkipContextLinesForFrame(frame: StackFrame): boolean {\n  if (frame.lineno !== undefined && frame.lineno > MAX_CONTEXTLINES_LINENO) {\n    return true\n  }\n  if (frame.colno !== undefined && frame.colno > MAX_CONTEXTLINES_COLNO) {\n    return true\n  }\n  return false\n}\n\n/**\n * Checks if we have all the contents that we need in the cache.\n */\nfunction rangeExistsInContentCache(file: string, range: ReadlineRange): boolean {\n  const contents = LRU_FILE_CONTENTS_CACHE.get(file)\n  if (contents === undefined) {\n    return false\n  }\n\n  for (let i = range[0]; i <= range[1]; i++) {\n    if (contents[i] === undefined) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Creates contiguous ranges of lines to read from a file. In the case where context lines overlap,\n * the ranges are merged to create a single range.\n */\nfunction makeLineReaderRanges(lines: number[]): ReadlineRange[] {\n  if (!lines.length) {\n    return []\n  }\n\n  let i = 0\n  const line = lines[0]\n\n  if (typeof line !== 'number') {\n    return []\n  }\n\n  let current = makeContextRange(line)\n  const out: ReadlineRange[] = []\n  while (true) {\n    if (i === lines.length - 1) {\n      out.push(current)\n      break\n    }\n\n    // If the next line falls into the current range, extend the current range to lineno + linecontext.\n    const next = lines[i + 1]\n    if (typeof next !== 'number') {\n      break\n    }\n    if (next <= current[1]) {\n      current[1] = next + DEFAULT_LINES_OF_CONTEXT\n    } else {\n      out.push(current)\n      current = makeContextRange(next)\n    }\n\n    i++\n  }\n\n  return out\n}\n// Determine start and end indices for context range (inclusive);\nfunction makeContextRange(line: number): [start: number, end: number] {\n  return [makeRangeStart(line), makeRangeEnd(line)]\n}\n// Compute inclusive end context range\nfunction makeRangeStart(line: number): number {\n  return Math.max(1, line - DEFAULT_LINES_OF_CONTEXT)\n}\n// Compute inclusive start context range\nfunction makeRangeEnd(line: number): number {\n  return line + DEFAULT_LINES_OF_CONTEXT\n}\n\n/**\n * Get or init map value\n */\nfunction emplace<T extends ReduceableCache<K, V>, K extends string, V>(map: T, key: K, contents: V): V {\n  const value = map.get(key)\n\n  if (value === undefined) {\n    map.set(key, contents)\n    return contents\n  }\n\n  return value\n}\n\nfunction snipLine(line: string, colno: number): string {\n  let newLine = line\n  const lineLength = newLine.length\n  if (lineLength <= 150) {\n    return newLine\n  }\n  if (colno > lineLength) {\n    colno = lineLength\n  }\n\n  let start = Math.max(colno - 60, 0)\n  if (start < 5) {\n    start = 0\n  }\n\n  let end = Math.min(start + 140, lineLength)\n  if (end > lineLength - 5) {\n    end = lineLength\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0)\n  }\n\n  newLine = newLine.slice(start, end)\n  if (start > 0) {\n    newLine = `...${newLine}`\n  }\n  if (end < lineLength) {\n    newLine += '...'\n  }\n\n  return newLine\n}\n","import { isError, isErrorEvent, isEvent, isPlainObject } from './type-checking'\nimport { ErrorProperties, EventHint, Exception, Mechanism, StackFrame, StackParser } from './types'\nimport { addSourceContext } from './context-lines'\n\n/**\n * based on the very wonderful MIT licensed Sentry SDK\n */\n\nexport async function propertiesFromUnknownInput(\n  stackParser: StackParser,\n  input: unknown,\n  hint?: EventHint\n): Promise<ErrorProperties> {\n  const providedMechanism = hint && hint.mechanism\n  const mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  }\n\n  const error = getError(mechanism, input, hint)\n  const exception = await exceptionFromError(stackParser, error)\n\n  exception.value = exception.value || ''\n  exception.type = exception.type || 'Error'\n  exception.mechanism = mechanism\n\n  const properties = { $exception_list: [exception] }\n\n  return properties\n}\n\nfunction getError(mechanism: Mechanism, exception: unknown, hint?: EventHint): Error {\n  if (isError(exception)) {\n    return exception\n  }\n\n  mechanism.synthetic = true\n\n  if (isPlainObject(exception)) {\n    const errorFromProp = getErrorPropertyFromObject(exception)\n    if (errorFromProp) {\n      return errorFromProp\n    }\n\n    const message = getMessageForObject(exception)\n    const ex = hint?.syntheticException || new Error(message)\n    ex.message = message\n\n    return ex\n  }\n\n  // This handles when someone does: `throw \"something awesome\";`\n  // We use synthesized Error here so we can extract a (rough) stack trace.\n  const ex = hint?.syntheticException || new Error(exception as string)\n  ex.message = `${exception}`\n\n  return ex\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj: Record<string, unknown>): Error | undefined {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop]\n      if (value instanceof Error) {\n        return value\n      }\n    }\n  }\n\n  return undefined\n}\n\nfunction getMessageForObject(exception: Record<string, unknown>): string {\n  if ('name' in exception && typeof exception.name === 'string') {\n    let message = `'${exception.name}' captured as exception`\n\n    if ('message' in exception && typeof exception.message === 'string') {\n      message += ` with message '${exception.message}'`\n    }\n\n    return message\n  } else if ('message' in exception && typeof exception.message === 'string') {\n    return exception.message\n  }\n\n  const keys = extractExceptionKeysForMessage(exception)\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as exception with message \\`${exception.message}\\``\n  }\n\n  const className = getObjectClassName(exception)\n\n  return `${className && className !== 'Object' ? `'${className}'` : 'Object'} captured as exception with keys: ${keys}`\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: unknown | null = Object.getPrototypeOf(obj)\n    return prototype ? prototype.constructor.name : undefined\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception))\n  keys.sort()\n\n  const firstKey = keys[0]\n\n  if (!firstKey) {\n    return '[object has no keys]'\n  }\n\n  if (firstKey.length >= maxLength) {\n    return truncate(firstKey, maxLength)\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ')\n    if (serialized.length > maxLength) {\n      continue\n    }\n    if (includedKeys === keys.length) {\n      return serialized\n    }\n    return truncate(serialized, maxLength)\n  }\n\n  return ''\n}\n\nfunction truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argument itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject<V>(value: V):\n  | {\n      [ownProps: string]: unknown\n      type: string\n      target: string\n      currentTarget: string\n      detail?: unknown\n    }\n  | {\n      [ownProps: string]: unknown\n      message: string\n      name: string\n      stack?: string\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    }\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown\n      type: string\n      target: string\n      currentTarget: string\n      detail?: unknown\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    }\n\n    // TODO: figure out why this fails typing (I think CustomEvent is only supported in Node 19 onwards)\n    // if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n    //   newObj.detail = (value as unknown as CustomEvent).detail\n    // }\n\n    return newObj\n  } else {\n    return value\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {}\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property]\n      }\n    }\n    return extractedProps\n  } else {\n    return {}\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return Object.prototype.toString.call(target)\n  } catch (_oO) {\n    return '<unknown>'\n  }\n}\n\n/**\n * Extracts stack frames from the error and builds an Exception\n */\nasync function exceptionFromError(stackParser: StackParser, error: Error): Promise<Exception> {\n  const exception: Exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  }\n\n  const frames = await addSourceContext(parseStackFrames(stackParser, error))\n  if (frames.length) {\n    exception.stacktrace = { frames, type: 'raw' }\n  }\n\n  return exception\n}\n\n/**\n * Extracts stack frames from the error.stack string\n */\nfunction parseStackFrames(stackParser: StackParser, error: Error): StackFrame[] {\n  return stackParser(error.stack || '', 1)\n}\n","// copied and adapted from https://github.com/getsentry/sentry-javascript/blob/41fef4b10f3a644179b77985f00f8696c908539f/packages/browser/src/stack-parsers.ts\n// 💖open source\n\nimport { posix, sep, dirname } from 'node:path'\nimport { StackFrame, StackLineParser, StackLineParserFn, StackParser } from './types'\n\ntype GetModuleFn = (filename: string | undefined) => string | undefined\n\n// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re-written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/\nconst STACKTRACE_FRAME_LIMIT = 50\n\nconst UNKNOWN_FUNCTION = '?'\n\n/** Node Stack line parser */\nexport function node(getModule?: GetModuleFn): StackLineParserFn {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/\n\n  return (line: string) => {\n    const lineMatch = line.match(FULL_MATCH)\n\n    if (lineMatch) {\n      let object: string | undefined\n      let method: string | undefined\n      let functionName: string | undefined\n      let typeName: string | undefined\n      let methodName: string | undefined\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1]\n\n        let methodStart = functionName.lastIndexOf('.')\n        if (functionName[methodStart - 1] === '.') {\n          methodStart--\n        }\n\n        if (methodStart > 0) {\n          object = functionName.slice(0, methodStart)\n          method = functionName.slice(methodStart + 1)\n          const objectEnd = object.indexOf('.Module')\n          if (objectEnd > 0) {\n            functionName = functionName.slice(objectEnd + 1)\n            object = object.slice(0, objectEnd)\n          }\n        }\n        typeName = undefined\n      }\n\n      if (method) {\n        typeName = object\n        methodName = method\n      }\n\n      if (method === '<anonymous>') {\n        methodName = undefined\n        functionName = undefined\n      }\n\n      if (functionName === undefined) {\n        methodName = methodName || UNKNOWN_FUNCTION\n        functionName = typeName ? `${typeName}.${methodName}` : methodName\n      }\n\n      let filename = lineMatch[2]?.startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2]\n      const isNative = lineMatch[5] === 'native'\n\n      // If it's a Windows path, trim the leading slash so that `/C:/foo` becomes `C:/foo`\n      if (filename?.match(/\\/[A-Z]:/)) {\n        filename = filename.slice(1)\n      }\n\n      if (!filename && lineMatch[5] && !isNative) {\n        filename = lineMatch[5]\n      }\n\n      return {\n        filename: filename ? decodeURI(filename) : undefined,\n        module: getModule ? getModule(filename) : undefined,\n        function: functionName,\n        lineno: _parseIntOrUndefined(lineMatch[3]),\n        colno: _parseIntOrUndefined(lineMatch[4]),\n        in_app: filenameIsInApp(filename || '', isNative),\n        platform: 'node:javascript',\n      }\n    }\n\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n        platform: 'node:javascript',\n      }\n    }\n\n    return undefined\n  }\n}\n\n/**\n * Does this filename look like it's part of the app code?\n */\nexport function filenameIsInApp(filename: string, isNative: boolean = false): boolean {\n  const isInternal =\n    isNative ||\n    (filename &&\n      // It's not internal if it's an absolute linux path\n      !filename.startsWith('/') &&\n      // It's not internal if it's an absolute windows path\n      !filename.match(/^[A-Z]:/) &&\n      // It's not internal if the path is starting with a dot\n      !filename.startsWith('.') &&\n      // It's not internal if the frame has a protocol. In node, this is usually the case if the file got pre-processed with a bundler like webpack\n      !filename.match(/^[a-zA-Z]([a-zA-Z0-9.\\-+])*:\\/\\//)) // Schema from: https://stackoverflow.com/a/3641782\n\n  // in_app is all that's not an internal Node function or a module within node_modules\n  // note that isNative appears to return true even for node core libraries\n  // see https://github.com/getsentry/raven-node/issues/176\n\n  return !isInternal && filename !== undefined && !filename.includes('node_modules/')\n}\n\nfunction _parseIntOrUndefined(input: string | undefined): number | undefined {\n  return parseInt(input || '', 10) || undefined\n}\n\nexport function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser {\n  return [90, node(getModule)]\n}\n\nexport const defaultStackParser: StackParser = createStackParser(nodeStackLineParser(createGetModuleFromFilename()))\n\n/** Creates a function that gets the module name from a filename */\nexport function createGetModuleFromFilename(\n  basePath: string = process.argv[1] ? dirname(process.argv[1]) : process.cwd(),\n  isWindows: boolean = sep === '\\\\'\n): (filename: string | undefined) => string | undefined {\n  const normalizedBase = isWindows ? normalizeWindowsPath(basePath) : basePath\n\n  return (filename: string | undefined) => {\n    if (!filename) {\n      return\n    }\n\n    const normalizedFilename = isWindows ? normalizeWindowsPath(filename) : filename\n\n    // eslint-disable-next-line prefer-const\n    let { dir, base: file, ext } = posix.parse(normalizedFilename)\n\n    if (ext === '.js' || ext === '.mjs' || ext === '.cjs') {\n      file = file.slice(0, ext.length * -1)\n    }\n\n    // The file name might be URI-encoded which we want to decode to\n    // the original file name.\n    const decodedFile = decodeURIComponent(file)\n\n    if (!dir) {\n      // No dirname whatsoever\n      dir = '.'\n    }\n\n    const n = dir.lastIndexOf('/node_modules')\n    if (n > -1) {\n      return `${dir.slice(n + 14).replace(/\\//g, '.')}:${decodedFile}`\n    }\n\n    // Let's see if it's a part of the main module\n    // To be a part of main module, it has to share the same base\n    if (dir.startsWith(normalizedBase)) {\n      const moduleName = dir.slice(normalizedBase.length + 1).replace(/\\//g, '.')\n      return moduleName ? `${moduleName}:${decodedFile}` : decodedFile\n    }\n\n    return decodedFile\n  }\n}\n\n/** normalizes Windows paths */\nfunction normalizeWindowsPath(path: string): string {\n  return path\n    .replace(/^[A-Z]:/, '') // remove Windows-style prefix\n    .replace(/\\\\/g, '/') // replace all `\\` instances with `/`\n}\n\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map((p) => p[1])\n\n  return (stack: string, skipFirstLines: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = []\n    const lines = stack.split('\\n')\n\n    for (let i = skipFirstLines; i < lines.length; i++) {\n      const line = lines[i] as string\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      if (line.length > 1024) {\n        continue\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine)\n\n        if (frame) {\n          frames.push(frame)\n          break\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break\n      }\n    }\n\n    return reverseAndStripFrames(frames)\n  }\n}\n\nexport function reverseAndStripFrames(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return []\n  }\n\n  const localStack = Array.from(stack)\n\n  localStack.reverse()\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map((frame) => ({\n    ...frame,\n    filename: frame.filename || getLastStackFrame(localStack).filename,\n    function: frame.function || UNKNOWN_FUNCTION,\n  }))\n}\n\nfunction getLastStackFrame(arr: StackFrame[]): StackFrame {\n  return arr[arr.length - 1] || {}\n}\n","import { EventHint } from './extensions/error-tracking/types'\nimport { addUncaughtExceptionListener, addUnhandledRejectionListener } from './extensions/error-tracking/autocapture'\nimport { PostHog, PostHogOptions } from './posthog-node'\nimport { uuidv7 } from 'posthog-core/src/vendor/uuidv7'\nimport { propertiesFromUnknownInput } from './extensions/error-tracking/error-conversion'\nimport { EventMessage } from './types'\nimport { defaultStackParser } from './extensions/error-tracking/stack-trace'\n\nconst SHUTDOWN_TIMEOUT = 2000\n\nexport default class ErrorTracking {\n  private client: PostHog\n  private _exceptionAutocaptureEnabled: boolean\n\n  static async captureException(\n    client: PostHog,\n    error: unknown,\n    hint: EventHint,\n    distinctId?: string,\n    additionalProperties?: Record<string | number, any>\n  ): Promise<void> {\n    const properties: EventMessage['properties'] = { ...additionalProperties }\n\n    // Given stateless nature of Node SDK we capture exceptions using personless processing when no\n    // user can be determined because a distinct_id is not provided e.g. exception autocapture\n    if (!distinctId) {\n      properties.$process_person_profile = false\n    }\n\n    const exceptionProperties = await propertiesFromUnknownInput(defaultStackParser, error, hint)\n\n    client.capture({\n      event: '$exception',\n      distinctId: distinctId || uuidv7(),\n      properties: {\n        ...exceptionProperties,\n        ...properties,\n      },\n    })\n  }\n\n  constructor(client: PostHog, options: PostHogOptions) {\n    this.client = client\n    this._exceptionAutocaptureEnabled = options.enableExceptionAutocapture || false\n\n    this.startAutocaptureIfEnabled()\n  }\n\n  private startAutocaptureIfEnabled(): void {\n    if (this.isEnabled()) {\n      addUncaughtExceptionListener(this.onException.bind(this), this.onFatalError.bind(this))\n      addUnhandledRejectionListener(this.onException.bind(this))\n    }\n  }\n\n  private onException(exception: unknown, hint: EventHint): void {\n    ErrorTracking.captureException(this.client, exception, hint)\n  }\n\n  private async onFatalError(): Promise<void> {\n    await this.client.shutdown(SHUTDOWN_TIMEOUT)\n  }\n\n  isEnabled(): boolean {\n    return !this.client.isDisabled && this._exceptionAutocaptureEnabled\n  }\n}\n","import { version } from '../package.json'\n\nimport {\n  JsonType,\n  PostHogCoreOptions,\n  PostHogCoreStateless,\n  PostHogDecideResponse,\n  PostHogFetchOptions,\n  PostHogFetchResponse,\n  PostHogFlagsAndPayloadsResponse,\n  PostHogPersistedProperty,\n} from '../../posthog-core/src'\nimport { PostHogMemoryStorage } from '../../posthog-core/src/storage-memory'\nimport { EventMessage, GroupIdentifyMessage, IdentifyMessage, PostHogNodeV1 } from './types'\nimport { FeatureFlagsPoller } from './feature-flags'\nimport fetch from './fetch'\nimport ErrorTracking from './error-tracking'\n\nexport type PostHogOptions = PostHogCoreOptions & {\n  persistence?: 'memory'\n  personalApiKey?: string\n  privacyMode?: boolean\n  enableExceptionAutocapture?: boolean\n  // The interval in milliseconds between polls for refreshing feature flag definitions. Defaults to 30 seconds.\n  featureFlagsPollingInterval?: number\n  // Maximum size of cache that deduplicates $feature_flag_called calls per user.\n  maxCacheSize?: number\n  fetch?: (url: string, options: PostHogFetchOptions) => Promise<PostHogFetchResponse>\n}\n\nconst THIRTY_SECONDS = 30 * 1000\nconst MAX_CACHE_SIZE = 50 * 1000\n\n// The actual exported Nodejs API.\nexport class PostHog extends PostHogCoreStateless implements PostHogNodeV1 {\n  private _memoryStorage = new PostHogMemoryStorage()\n\n  private featureFlagsPoller?: FeatureFlagsPoller\n  protected errorTracking: ErrorTracking\n  private maxCacheSize: number\n  public readonly options: PostHogOptions\n\n  distinctIdHasSentFlagCalls: Record<string, string[]>\n\n  constructor(apiKey: string, options: PostHogOptions = {}) {\n    super(apiKey, options)\n\n    this.options = options\n\n    if (options.personalApiKey) {\n      this.featureFlagsPoller = new FeatureFlagsPoller({\n        pollingInterval:\n          typeof options.featureFlagsPollingInterval === 'number'\n            ? options.featureFlagsPollingInterval\n            : THIRTY_SECONDS,\n        personalApiKey: options.personalApiKey,\n        projectApiKey: apiKey,\n        timeout: options.requestTimeout ?? 10000, // 10 seconds\n        host: this.host,\n        fetch: options.fetch,\n        onError: (err: Error) => {\n          this._events.emit('error', err)\n        },\n        customHeaders: this.getCustomHeaders(),\n      })\n    }\n    this.errorTracking = new ErrorTracking(this, options)\n    this.distinctIdHasSentFlagCalls = {}\n    this.maxCacheSize = options.maxCacheSize || MAX_CACHE_SIZE\n  }\n\n  getPersistedProperty(key: PostHogPersistedProperty): any | undefined {\n    return this._memoryStorage.getProperty(key)\n  }\n\n  setPersistedProperty(key: PostHogPersistedProperty, value: any | null): void {\n    return this._memoryStorage.setProperty(key, value)\n  }\n\n  fetch(url: string, options: PostHogFetchOptions): Promise<PostHogFetchResponse> {\n    return this.options.fetch ? this.options.fetch(url, options) : fetch(url, options)\n  }\n\n  getLibraryId(): string {\n    return 'posthog-node'\n  }\n  getLibraryVersion(): string {\n    return version\n  }\n  getCustomUserAgent(): string {\n    return `${this.getLibraryId()}/${this.getLibraryVersion()}`\n  }\n\n  enable(): Promise<void> {\n    return super.optIn()\n  }\n\n  disable(): Promise<void> {\n    return super.optOut()\n  }\n\n  debug(enabled: boolean = true): void {\n    super.debug(enabled)\n    this.featureFlagsPoller?.debug(enabled)\n  }\n\n  capture({\n    distinctId,\n    event,\n    properties,\n    groups,\n    sendFeatureFlags,\n    timestamp,\n    disableGeoip,\n    uuid,\n  }: EventMessage): void {\n    const _capture = (props: EventMessage['properties']): void => {\n      super.captureStateless(distinctId, event, props, { timestamp, disableGeoip, uuid })\n    }\n\n    const _getFlags = (\n      distinctId: EventMessage['distinctId'],\n      groups: EventMessage['groups'],\n      disableGeoip: EventMessage['disableGeoip']\n    ): Promise<PostHogDecideResponse['featureFlags'] | undefined> => {\n      return super.getFeatureFlagsStateless(distinctId, groups, undefined, undefined, disableGeoip)\n    }\n\n    // :TRICKY: If we flush, or need to shut down, to not lose events we want this promise to resolve before we flush\n    const capturePromise = Promise.resolve()\n      .then(async () => {\n        if (sendFeatureFlags) {\n          // If we are sending feature flags, we need to make sure we have the latest flags\n          // return await super.getFeatureFlagsStateless(distinctId, groups, undefined, undefined, disableGeoip)\n          return await _getFlags(distinctId, groups, disableGeoip)\n        }\n\n        if (event === '$feature_flag_called') {\n          // If we're capturing a $feature_flag_called event, we don't want to enrich the event with cached flags that may be out of date.\n          return {}\n        }\n\n        if ((this.featureFlagsPoller?.featureFlags?.length || 0) > 0) {\n          // Otherwise we may as well check for the flags locally and include them if they are already loaded\n          const groupsWithStringValues: Record<string, string> = {}\n          for (const [key, value] of Object.entries(groups || {})) {\n            groupsWithStringValues[key] = String(value)\n          }\n\n          return await this.getAllFlags(distinctId, {\n            groups: groupsWithStringValues,\n            disableGeoip,\n            onlyEvaluateLocally: true,\n          })\n        }\n        return {}\n      })\n      .then((flags) => {\n        // Derive the relevant flag properties to add\n        const additionalProperties: Record<string, any> = {}\n        if (flags) {\n          for (const [feature, variant] of Object.entries(flags)) {\n            additionalProperties[`$feature/${feature}`] = variant\n          }\n        }\n        const activeFlags = Object.keys(flags || {}).filter((flag) => flags?.[flag] !== false)\n        if (activeFlags.length > 0) {\n          additionalProperties['$active_feature_flags'] = activeFlags\n        }\n\n        return additionalProperties\n      })\n      .catch(() => {\n        // Something went wrong getting the flag info - we should capture the event anyways\n        return {}\n      })\n      .then((additionalProperties) => {\n        // No matter what - capture the event\n        _capture({ ...additionalProperties, ...properties, $groups: groups })\n      })\n\n    this.addPendingPromise(capturePromise)\n  }\n\n  identify({ distinctId, properties, disableGeoip }: IdentifyMessage): void {\n    // Catch properties passed as $set and move them to the top level\n\n    // promote $set and $set_once to top level\n    const userPropsOnce = properties?.$set_once\n    delete properties?.$set_once\n\n    // if no $set is provided we assume all properties are $set\n    const userProps = properties?.$set || properties\n\n    super.identifyStateless(\n      distinctId,\n      {\n        $set: userProps,\n        $set_once: userPropsOnce,\n      },\n      { disableGeoip }\n    )\n  }\n\n  alias(data: { distinctId: string; alias: string; disableGeoip?: boolean }): void {\n    super.aliasStateless(data.alias, data.distinctId, undefined, { disableGeoip: data.disableGeoip })\n  }\n\n  async getFeatureFlag(\n    key: string,\n    distinctId: string,\n    options?: {\n      groups?: Record<string, string>\n      personProperties?: Record<string, string>\n      groupProperties?: Record<string, Record<string, string>>\n      onlyEvaluateLocally?: boolean\n      sendFeatureFlagEvents?: boolean\n      disableGeoip?: boolean\n    }\n  ): Promise<string | boolean | undefined> {\n    const { groups, disableGeoip } = options || {}\n    let { onlyEvaluateLocally, sendFeatureFlagEvents, personProperties, groupProperties } = options || {}\n\n    const adjustedProperties = this.addLocalPersonAndGroupProperties(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties\n    )\n\n    personProperties = adjustedProperties.allPersonProperties\n    groupProperties = adjustedProperties.allGroupProperties\n\n    // set defaults\n    if (onlyEvaluateLocally == undefined) {\n      onlyEvaluateLocally = false\n    }\n    if (sendFeatureFlagEvents == undefined) {\n      sendFeatureFlagEvents = true\n    }\n\n    let response = await this.featureFlagsPoller?.getFeatureFlag(\n      key,\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties\n    )\n\n    const flagWasLocallyEvaluated = response !== undefined\n\n    if (!flagWasLocallyEvaluated && !onlyEvaluateLocally) {\n      response = await super.getFeatureFlagStateless(\n        key,\n        distinctId,\n        groups,\n        personProperties,\n        groupProperties,\n        disableGeoip\n      )\n    }\n\n    const featureFlagReportedKey = `${key}_${response}`\n\n    if (\n      sendFeatureFlagEvents &&\n      (!(distinctId in this.distinctIdHasSentFlagCalls) ||\n        !this.distinctIdHasSentFlagCalls[distinctId].includes(featureFlagReportedKey))\n    ) {\n      if (Object.keys(this.distinctIdHasSentFlagCalls).length >= this.maxCacheSize) {\n        this.distinctIdHasSentFlagCalls = {}\n      }\n      if (Array.isArray(this.distinctIdHasSentFlagCalls[distinctId])) {\n        this.distinctIdHasSentFlagCalls[distinctId].push(featureFlagReportedKey)\n      } else {\n        this.distinctIdHasSentFlagCalls[distinctId] = [featureFlagReportedKey]\n      }\n      this.capture({\n        distinctId,\n        event: '$feature_flag_called',\n        properties: {\n          $feature_flag: key,\n          $feature_flag_response: response,\n          locally_evaluated: flagWasLocallyEvaluated,\n          [`$feature/${key}`]: response,\n        },\n        groups,\n        disableGeoip,\n      })\n    }\n    return response\n  }\n\n  async getFeatureFlagPayload(\n    key: string,\n    distinctId: string,\n    matchValue?: string | boolean,\n    options?: {\n      groups?: Record<string, string>\n      personProperties?: Record<string, string>\n      groupProperties?: Record<string, Record<string, string>>\n      onlyEvaluateLocally?: boolean\n      sendFeatureFlagEvents?: boolean\n      disableGeoip?: boolean\n    }\n  ): Promise<JsonType | undefined> {\n    const { groups, disableGeoip } = options || {}\n    let { onlyEvaluateLocally, sendFeatureFlagEvents, personProperties, groupProperties } = options || {}\n\n    const adjustedProperties = this.addLocalPersonAndGroupProperties(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties\n    )\n\n    personProperties = adjustedProperties.allPersonProperties\n    groupProperties = adjustedProperties.allGroupProperties\n\n    let response = undefined\n\n    // Try to get match value locally if not provided\n    if (!matchValue) {\n      matchValue = await this.getFeatureFlag(key, distinctId, {\n        ...options,\n        onlyEvaluateLocally: true,\n      })\n    }\n\n    if (matchValue) {\n      response = await this.featureFlagsPoller?.computeFeatureFlagPayloadLocally(key, matchValue)\n    }\n\n    // set defaults\n    if (onlyEvaluateLocally == undefined) {\n      onlyEvaluateLocally = false\n    }\n    if (sendFeatureFlagEvents == undefined) {\n      sendFeatureFlagEvents = true\n    }\n\n    // set defaults\n    if (onlyEvaluateLocally == undefined) {\n      onlyEvaluateLocally = false\n    }\n\n    const payloadWasLocallyEvaluated = response !== undefined\n\n    if (!payloadWasLocallyEvaluated && !onlyEvaluateLocally) {\n      response = await super.getFeatureFlagPayloadStateless(\n        key,\n        distinctId,\n        groups,\n        personProperties,\n        groupProperties,\n        disableGeoip\n      )\n    }\n    return response\n  }\n\n  async getRemoteConfigPayload(flagKey: string): Promise<JsonType | undefined> {\n    return (await this.featureFlagsPoller?._requestRemoteConfigPayload(flagKey))?.json()\n  }\n\n  async isFeatureEnabled(\n    key: string,\n    distinctId: string,\n    options?: {\n      groups?: Record<string, string>\n      personProperties?: Record<string, string>\n      groupProperties?: Record<string, Record<string, string>>\n      onlyEvaluateLocally?: boolean\n      sendFeatureFlagEvents?: boolean\n      disableGeoip?: boolean\n    }\n  ): Promise<boolean | undefined> {\n    const feat = await this.getFeatureFlag(key, distinctId, options)\n    if (feat === undefined) {\n      return undefined\n    }\n    return !!feat || false\n  }\n\n  async getAllFlags(\n    distinctId: string,\n    options?: {\n      groups?: Record<string, string>\n      personProperties?: Record<string, string>\n      groupProperties?: Record<string, Record<string, string>>\n      onlyEvaluateLocally?: boolean\n      disableGeoip?: boolean\n    }\n  ): Promise<Record<string, string | boolean>> {\n    const response = await this.getAllFlagsAndPayloads(distinctId, options)\n    return response.featureFlags\n  }\n\n  async getAllFlagsAndPayloads(\n    distinctId: string,\n    options?: {\n      groups?: Record<string, string>\n      personProperties?: Record<string, string>\n      groupProperties?: Record<string, Record<string, string>>\n      onlyEvaluateLocally?: boolean\n      disableGeoip?: boolean\n    }\n  ): Promise<PostHogFlagsAndPayloadsResponse> {\n    const { groups, disableGeoip } = options || {}\n    let { onlyEvaluateLocally, personProperties, groupProperties } = options || {}\n\n    const adjustedProperties = this.addLocalPersonAndGroupProperties(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties\n    )\n\n    personProperties = adjustedProperties.allPersonProperties\n    groupProperties = adjustedProperties.allGroupProperties\n\n    // set defaults\n    if (onlyEvaluateLocally == undefined) {\n      onlyEvaluateLocally = false\n    }\n\n    const localEvaluationResult = await this.featureFlagsPoller?.getAllFlagsAndPayloads(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties\n    )\n\n    let featureFlags = {}\n    let featureFlagPayloads = {}\n    let fallbackToDecide = true\n    if (localEvaluationResult) {\n      featureFlags = localEvaluationResult.response\n      featureFlagPayloads = localEvaluationResult.payloads\n      fallbackToDecide = localEvaluationResult.fallbackToDecide\n    }\n\n    if (fallbackToDecide && !onlyEvaluateLocally) {\n      const remoteEvaluationResult = await super.getFeatureFlagsAndPayloadsStateless(\n        distinctId,\n        groups,\n        personProperties,\n        groupProperties,\n        disableGeoip\n      )\n      featureFlags = {\n        ...featureFlags,\n        ...(remoteEvaluationResult.flags || {}),\n      }\n      featureFlagPayloads = {\n        ...featureFlagPayloads,\n        ...(remoteEvaluationResult.payloads || {}),\n      }\n    }\n\n    return { featureFlags, featureFlagPayloads }\n  }\n\n  groupIdentify({ groupType, groupKey, properties, distinctId, disableGeoip }: GroupIdentifyMessage): void {\n    super.groupIdentifyStateless(groupType, groupKey, properties, { disableGeoip }, distinctId)\n  }\n\n  async reloadFeatureFlags(): Promise<void> {\n    await this.featureFlagsPoller?.loadFeatureFlags(true)\n  }\n\n  async shutdown(shutdownTimeoutMs?: number): Promise<void> {\n    this.featureFlagsPoller?.stopPoller()\n    return super.shutdown(shutdownTimeoutMs)\n  }\n\n  private addLocalPersonAndGroupProperties(\n    distinctId: string,\n    groups?: Record<string, string>,\n    personProperties?: Record<string, string>,\n    groupProperties?: Record<string, Record<string, string>>\n  ): { allPersonProperties: Record<string, string>; allGroupProperties: Record<string, Record<string, string>> } {\n    const allPersonProperties = { distinct_id: distinctId, ...(personProperties || {}) }\n\n    const allGroupProperties: Record<string, Record<string, string>> = {}\n    if (groups) {\n      for (const groupName of Object.keys(groups)) {\n        allGroupProperties[groupName] = {\n          $group_key: groups[groupName],\n          ...(groupProperties?.[groupName] || {}),\n        }\n      }\n    }\n\n    return { allPersonProperties, allGroupProperties }\n  }\n\n  captureException(error: unknown, distinctId?: string, additionalProperties?: Record<string | number, any>): void {\n    const syntheticException = new Error('PostHog syntheticException')\n    ErrorTracking.captureException(this, error, { syntheticException }, distinctId, additionalProperties)\n  }\n}\n","/**\n * @file Adapted from [posthog-js](https://github.com/PostHog/posthog-js/blob/8157df935a4d0e71d2fefef7127aa85ee51c82d1/src/extensions/sentry-integration.ts) with modifications for the Node SDK.\n */\n/**\n * Integrate Sentry with PostHog. This will add a direct link to the person in Sentry, and an $exception event in PostHog.\n *\n * ### Usage\n *\n *     Sentry.init({\n *          dsn: 'https://example',\n *          integrations: [\n *              new PostHogSentryIntegration(posthog)\n *          ]\n *     })\n *\n *     Sentry.setTag(PostHogSentryIntegration.POSTHOG_ID_TAG, 'some distinct id');\n *\n * @param {Object} [posthog] The posthog object\n * @param {string} [organization] Optional: The Sentry organization, used to send a direct link from PostHog to Sentry\n * @param {Number} [projectId] Optional: The Sentry project id, used to send a direct link from PostHog to Sentry\n * @param {string} [prefix] Optional: Url of a self-hosted sentry instance (default: https://sentry.io/organizations/)\n * @param {SeverityLevel[] | '*'} [severityAllowList] Optional: send events matching the provided levels. Use '*' to send all events (default: ['error'])\n */\n\nimport { SeverityLevel } from 'posthog-node/src/extensions/error-tracking/types'\nimport { type PostHog } from '../posthog-node'\n\n// NOTE - we can't import from @sentry/types because it changes frequently and causes clashes\n// We only use a small subset of the types, so we can just define the integration overall and use any for the rest\n\n// import {\n//     Event as _SentryEvent,\n//     EventProcessor as _SentryEventProcessor,\n//     Exception as _SentryException,\n//     Hub as _SentryHub,\n//     Primitive as _SentryPrimitive,\n//     Integration as _SentryIntegration,\n//     IntegrationClass as _SentryIntegrationClass,\n// } from '@sentry/types'\n\n// Uncomment the above and comment the below to get type checking for development\n\ntype _SentryEvent = any\ntype _SentryEventProcessor = any\ntype _SentryException = any\ntype _SentryHub = any\ntype _SentryPrimitive = any\n\ninterface _SentryIntegration {\n  name: string\n  processEvent(event: _SentryEvent): _SentryEvent\n}\n\ninterface _SentryIntegrationClass {\n  name: string\n  setupOnce(addGlobalEventProcessor: (callback: _SentryEventProcessor) => void, getCurrentHub: () => _SentryHub): void\n}\n\ninterface SentryExceptionProperties {\n  $sentry_event_id?: string\n  $sentry_exception?: { values?: _SentryException[] }\n  $sentry_exception_message?: string\n  $sentry_exception_type?: string\n  $sentry_tags: { [key: string]: _SentryPrimitive }\n  $sentry_url?: string\n}\n\nexport type SentryIntegrationOptions = {\n  organization?: string\n  projectId?: number\n  prefix?: string\n  severityAllowList?: SeverityLevel[] | '*'\n}\n\nconst NAME = 'posthog-node'\n\nexport function createEventProcessor(\n  _posthog: PostHog,\n  { organization, projectId, prefix, severityAllowList = ['error'] }: SentryIntegrationOptions = {}\n): (event: _SentryEvent) => _SentryEvent {\n  return (event) => {\n    const shouldProcessLevel = severityAllowList === '*' || severityAllowList.includes(event.level)\n    if (!shouldProcessLevel) {\n      return event\n    }\n    if (!event.tags) {\n      event.tags = {}\n    }\n\n    // Get the PostHog user ID from a specific tag, which users can set on their Sentry scope as they need.\n    const userId = event.tags[PostHogSentryIntegration.POSTHOG_ID_TAG]\n    if (userId === undefined) {\n      // If we can't find a user ID, don't bother linking the event. We won't be able to send anything meaningful to PostHog without it.\n      return event\n    }\n\n    const uiHost = _posthog.options.host ?? 'https://us.i.posthog.com'\n    const personUrl = new URL(`/project/${_posthog.apiKey}/person/${userId}`, uiHost).toString()\n\n    event.tags['PostHog Person URL'] = personUrl\n\n    const exceptions: _SentryException[] = event.exception?.values || []\n\n    exceptions.map((exception) => {\n      if (exception.stacktrace) {\n        exception.stacktrace.type = 'raw'\n      }\n    })\n\n    const properties: SentryExceptionProperties & {\n      // two properties added to match any exception auto-capture\n      // added manually to avoid any dependency on the lazily loaded content\n      $exception_message: any\n      $exception_type: any\n      $exception_list: any\n      $exception_personURL: string\n      $exception_level: SeverityLevel\n    } = {\n      // PostHog Exception Properties,\n      $exception_message: exceptions[0]?.value || event.message,\n      $exception_type: exceptions[0]?.type,\n      $exception_personURL: personUrl,\n      $exception_level: event.level,\n      $exception_list: exceptions,\n      // Sentry Exception Properties\n      $sentry_event_id: event.event_id,\n      $sentry_exception: event.exception,\n      $sentry_exception_message: exceptions[0]?.value || event.message,\n      $sentry_exception_type: exceptions[0]?.type,\n      $sentry_tags: event.tags,\n    }\n\n    if (organization && projectId) {\n      properties['$sentry_url'] =\n        (prefix || 'https://sentry.io/organizations/') +\n        organization +\n        '/issues/?project=' +\n        projectId +\n        '&query=' +\n        event.event_id\n    }\n\n    _posthog.capture({ event: '$exception', distinctId: userId, properties })\n\n    return event\n  }\n}\n\n// V8 integration - function based\nexport function sentryIntegration(_posthog: PostHog, options?: SentryIntegrationOptions): _SentryIntegration {\n  const processor = createEventProcessor(_posthog, options)\n  return {\n    name: NAME,\n    processEvent(event) {\n      return processor(event)\n    },\n  }\n}\n\n// V7 integration - class based\nexport class PostHogSentryIntegration implements _SentryIntegrationClass {\n  public readonly name = NAME\n\n  public static readonly POSTHOG_ID_TAG = 'posthog_distinct_id'\n\n  public setupOnce: (\n    addGlobalEventProcessor: (callback: _SentryEventProcessor) => void,\n    getCurrentHub: () => _SentryHub\n  ) => void\n\n  constructor(_posthog: PostHog, organization?: string, prefix?: string, severityAllowList?: SeverityLevel[] | '*') {\n    // setupOnce gets called by Sentry when it intializes the plugin\n    this.name = NAME\n    this.setupOnce = function (\n      addGlobalEventProcessor: (callback: _SentryEventProcessor) => void,\n      getCurrentHub: () => _SentryHub\n    ) {\n      const projectId = getCurrentHub()?.getClient()?.getDsn()?.projectId\n      addGlobalEventProcessor(\n        createEventProcessor(_posthog, {\n          organization,\n          projectId,\n          prefix,\n          severityAllowList,\n        })\n      )\n    }\n  }\n}\n","import type * as http from 'node:http'\nimport { uuidv7 } from 'posthog-core/src/vendor/uuidv7'\nimport ErrorTracking from '../error-tracking'\nimport { PostHog } from '../posthog-node'\n\ntype ExpressMiddleware = (req: http.IncomingMessage, res: http.ServerResponse, next: () => void) => void\n\ntype ExpressErrorMiddleware = (\n  error: MiddlewareError,\n  req: http.IncomingMessage,\n  res: http.ServerResponse,\n  next: (error: MiddlewareError) => void\n) => void\n\ninterface MiddlewareError extends Error {\n  status?: number | string\n  statusCode?: number | string\n  status_code?: number | string\n  output?: {\n    statusCode?: number | string\n  }\n}\n\nexport function setupExpressErrorHandler(\n  _posthog: PostHog,\n  app: {\n    use: (middleware: ExpressMiddleware | ExpressErrorMiddleware) => unknown\n  }\n): void {\n  app.use((error: MiddlewareError, _, __, next: (error: MiddlewareError) => void): void => {\n    const hint = { mechanism: { type: 'middleware', handled: false } }\n    // Given stateless nature of Node SDK we capture exceptions using personless processing\n    // when no user can be determined e.g. in the case of exception autocapture\n    ErrorTracking.captureException(_posthog, error, hint, uuidv7(), { $process_person_profile: false })\n    next(error)\n  })\n}\n"],"names":["_fetch","getFetch","axios","require","url","options","res","request","headers","method","toLowerCase","data","body","signal","validateStatus","status","text","json","LONG_SCALE","NULL_VALUES_ALLOWED_OPERATORS","ClientError","Error","constructor","message","captureStackTrace","name","Object","setPrototypeOf","prototype","InconclusiveMatchError","FeatureFlagsPoller","pollingInterval","personalApiKey","projectApiKey","timeout","host","customHeaders","debugMode","featureFlags","featureFlagsByKey","groupTypeMapping","cohorts","loadedSuccessfullyOnce","poller","undefined","fetch","onError","loadFeatureFlags","debug","enabled","logMsgIfDebug","fn","getFeatureFlag","key","distinctId","groups","personProperties","groupProperties","response","featureFlag","flag","computeFlagLocally","console","e","computeFeatureFlagPayloadLocally","matchValue","filters","payloads","toString","JSON","parse","getAllFlagsAndPayloads","fallbackToDecide","length","map","matchPayload","ensure_experience_continuity","active","flagFilters","aggregation_group_type_index","groupName","String","warn","focusedGroupProperties","matchFeatureFlagProperties","properties","flagConditions","isInconclusive","result","sortedFlagConditions","sort","conditionA","conditionB","AHasVariantOverride","variant","BHasVariantOverride","condition","isConditionMatch","variantOverride","flagVariants","multivariate","variants","some","getMatchingVariant","rolloutPercentage","rollout_percentage","warnFunction","msg","prop","propertyType","type","matches","matchCohort","matchProperty","_hash","hashValue","matchingVariant","variantLookupTable","find","valueMin","valueMax","lookupTable","multivariates","forEach","push","forceReload","_loadFeatureFlags","clearTimeout","setTimeout","_requestFeatureFlagDefinitions","responseJson","stringify","flags","reduce","acc","curr","group_type_mapping","err","getPersonalApiKeyRequestOptions","Authorization","abortTimeout","controller","AbortController","safeSetTimeout","abort","stopPoller","_requestRemoteConfigPayload","flagKey","salt","sha1Hash","createHash","update","parseInt","digest","slice","property","propertyValues","value","operator","overrideValue","includes","computeExactMatch","Array","isArray","val","compare","lhs","rhs","isValidRegex","match","parsedValue","parseFloat","parsedDate","relativeDateParseForFeatureFlagMatching","convertToDateTime","overrideDate","cohortProperties","cohortId","propertyGroup","matchPropertyGroup","propertyGroupType","values","errorMatchingLocally","negation","regex","RegExp","Date","date","isNaN","valueOf","parsedDt","toISOString","number","interval","setUTCHours","getUTCHours","setUTCDate","getUTCDate","setUTCMonth","getUTCMonth","setUTCFullYear","getUTCFullYear","makeUncaughtExceptionHandler","captureFn","onFatalFn","calledFatalError","assign","error","userProvidedListenersCount","global","process","listeners","filter","listener","_posthogErrorHandler","processWouldExit","mechanism","handled","addUncaughtExceptionListener","on","addUnhandledRejectionListener","reason","isEvent","candidate","Event","isInstanceOf","isPlainObject","isBuiltin","isError","call","base","isErrorEvent","event","className","ReduceableCache","_maxSize","_cache","Map","get","delete","set","size","keys","next","LRU_FILE_CONTENTS_CACHE","LRU_FILE_CONTENTS_FS_READ_FAILED","DEFAULT_LINES_OF_CONTEXT","MAX_CONTEXTLINES_COLNO","MAX_CONTEXTLINES_LINENO","addSourceContext","frames","filesToLines","i","frame","filename","lineno","shouldSkipContextLinesForFile","shouldSkipContextLinesForFrame","filesToLinesOutput","files","readlinePromises","file","filesToLineRanges","a","b","ranges","makeLineReaderRanges","every","r","rangeExistsInContentCache","cache","emplace","getContextLinesFromFile","Promise","all","catch","addSourceContextToFrames","path","output","resolve","stream","createReadStream","lineReaded","createInterface","input","destroyStreamAndResolve","destroy","lineNumber","currentRangeIndex","range","rangeStart","rangeEnd","onStreamError","close","removeAllListeners","line","snipLine","context_line","contents","addContextToFrame","pre_context","makeRangeStart","clearLineContext","end","makeRangeEnd","post_context","startsWith","endsWith","colno","lines","current","makeContextRange","out","Math","max","newLine","lineLength","start","min","propertiesFromUnknownInput","stackParser","hint","providedMechanism","getError","exception","exceptionFromError","$exception_list","synthetic","errorFromProp","getErrorPropertyFromObject","getMessageForObject","ex","syntheticException","obj","hasOwnProperty","extractExceptionKeysForMessage","getObjectClassName","getPrototypeOf","maxLength","convertToPlainObject","firstKey","truncate","includedKeys","serialized","join","str","stack","getOwnProperties","newObj","target","serializeEventTarget","currentTarget","extractedProps","_oO","parseStackFrames","stacktrace","WEBPACK_ERROR_REGEXP","STACKTRACE_FRAME_LIMIT","UNKNOWN_FUNCTION","node","getModule","FILENAME_MATCH","FULL_MATCH","lineMatch","object","functionName","typeName","methodName","methodStart","lastIndexOf","objectEnd","indexOf","isNative","decodeURI","module","function","_parseIntOrUndefined","in_app","filenameIsInApp","platform","isInternal","nodeStackLineParser","defaultStackParser","createStackParser","createGetModuleFromFilename","basePath","argv","dirname","cwd","isWindows","sep","normalizedBase","normalizeWindowsPath","normalizedFilename","dir","ext","posix","decodedFile","decodeURIComponent","n","replace","moduleName","parsers","sortedParsers","p","skipFirstLines","split","cleanedLine","test","parser","reverseAndStripFrames","localStack","from","reverse","getLastStackFrame","arr","SHUTDOWN_TIMEOUT","ErrorTracking","captureException","client","additionalProperties","$process_person_profile","exceptionProperties","capture","uuidv7","_exceptionAutocaptureEnabled","enableExceptionAutocapture","startAutocaptureIfEnabled","isEnabled","onException","bind","onFatalError","shutdown","isDisabled","THIRTY_SECONDS","MAX_CACHE_SIZE","PostHog","PostHogCoreStateless","apiKey","_memoryStorage","PostHogMemoryStorage","featureFlagsPoller","featureFlagsPollingInterval","requestTimeout","_events","emit","getCustomHeaders","errorTracking","distinctIdHasSentFlagCalls","maxCacheSize","getPersistedProperty","getProperty","setPersistedProperty","setProperty","getLibraryId","getLibraryVersion","version","getCustomUserAgent","enable","optIn","disable","optOut","sendFeatureFlags","timestamp","disableGeoip","uuid","_capture","props","captureStateless","_getFlags","getFeatureFlagsStateless","capturePromise","then","groupsWithStringValues","entries","getAllFlags","onlyEvaluateLocally","feature","activeFlags","$groups","addPendingPromise","identify","userPropsOnce","$set_once","userProps","$set","identifyStateless","alias","aliasStateless","sendFeatureFlagEvents","adjustedProperties","addLocalPersonAndGroupProperties","allPersonProperties","allGroupProperties","flagWasLocallyEvaluated","getFeatureFlagStateless","featureFlagReportedKey","$feature_flag","$feature_flag_response","locally_evaluated","getFeatureFlagPayload","payloadWasLocallyEvaluated","getFeatureFlagPayloadStateless","getRemoteConfigPayload","isFeatureEnabled","feat","localEvaluationResult","featureFlagPayloads","remoteEvaluationResult","getFeatureFlagsAndPayloadsStateless","groupIdentify","groupType","groupKey","groupIdentifyStateless","reloadFeatureFlags","shutdownTimeoutMs","distinct_id","$group_key","NAME","createEventProcessor","_posthog","organization","projectId","prefix","severityAllowList","shouldProcessLevel","level","tags","userId","PostHogSentryIntegration","POSTHOG_ID_TAG","uiHost","personUrl","URL","exceptions","$exception_message","$exception_type","$exception_personURL","$exception_level","$sentry_event_id","event_id","$sentry_exception","$sentry_exception_message","$sentry_exception_type","$sentry_tags","sentryIntegration","processor","processEvent","setupOnce","addGlobalEventProcessor","getCurrentHub","getClient","getDsn","setupExpressErrorHandler","app","use","_","__"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]}},
    {"offset": {"line": 3254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}